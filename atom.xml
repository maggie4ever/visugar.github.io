<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Visugar个人博客</title>
  <subtitle>书写前端，记录心情，以及碎碎念 ~</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://visugar.com/"/>
  <updated>2017-10-27T12:43:02.545Z</updated>
  <id>http://visugar.com/</id>
  
  <author>
    <name>张小花</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>假装四天三夜的旅行</title>
    <link href="http://visugar.com/2017/09/21/20170921wuzhenTravel/"/>
    <id>http://visugar.com/2017/09/21/20170921wuzhenTravel/</id>
    <published>2017-09-21T11:19:55.000Z</published>
    <updated>2017-10-27T12:43:02.545Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://upload-images.jianshu.io/upload_images/1727565-47132055b949a131.JPG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="在九月"></p>
<h3 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h3><p>在九月，来一场说走就走的旅行，怕是比较困难，毕竟国庆长假马上就要来了。<br>不过期盼了一年的部门旅游，总归是要去的，才不至于浪费 。至于为什么“难忘”，接着看下文就好了。</p>
<h3 id="期盼"><a href="#期盼" class="headerlink" title="期盼"></a>期盼</h3><p>大概是在七月份，听说今年的部门旅游有三条线，一国外二国内，想想好激动，毕竟还没出过国丫，心里盘算着一定要去国外。我们都美美的以为有泰国柬埔寨台湾九寨沟西安张家界其中的三个，最后的最后，我还是选择了三年前曾去过的杭州。</p>
<h3 id="启程"><a href="#启程" class="headerlink" title="启程"></a>启程</h3><p>作为上班族，能出去旅游当然是开心的，于是早早收拾好行李（重成狗额）。虽然是火车两日游，但还是带着疲惫在出发前上了个班（毕竟qiong）。吃过午饭，坐上大巴去小金口。庆幸的是跟小伙伴们在一起。</p>
<h3 id="Day01"><a href="#Day01" class="headerlink" title="Day01"></a>Day01</h3><p>其实这部分可以略过的，毕竟都是赶场子。</p>
<p>下火车是在清晨，杭州的确比广东凉爽很多，没带外套的我眼泪掉下来。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1727565-9688bfe981b3db7e.JPG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="钱江新城某景"></p>
<p>第一站来到了钱江新城，传说中的最佳观潮点，但是我这种人好像对潮并没有太大的兴趣，只见眼前白茫茫的一片，啊哈，由于游览时间只有半小时，现在我已经忘记那条河的模样了，只在匆匆忙忙中拍了几张合照便离去了。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1727565-28727fa7cb26834e.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="城市阳台"></p>
<p>接着是赶往西湖，伴随着导游巴拉巴拉的介绍，我连欣赏车窗外风景的心情都没了。这是第二次去西湖，依然觉得那是个很好的地方，只是在西湖中简短的船游让我觉得这跟别的湖没有太大区别，并且与苏堤和断桥也完美的错过了。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1727565-ebdeec86afb1b635.JPG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="一块钱的背面"></p>
<p>接着又去到雷峰塔，上一次因为时间不够来不及登塔，这次能上去也算是庆幸罢。但是不知为何上去了之后让我觉得这好像跟别的塔无异，就这样不停的拍着照片，假装自己很享受这次旅程。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1727565-e178161348499a08.JPG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="雷峰塔"></p>
<p>由于坐火车太久，导致10点就饿了，奈何中午吃饭也不安宁，我只记得最好吃的一道菜是手撕包菜。午餐过后赶往一个叫胡雪岩故居的豪宅，只记得房子很大，里面还有个很大很大的假山，地板凳子都是非常棒的，不过奉劝各位去杭州旅游的baby们实在没必要去这个宅子。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1727565-667e411954cc6400.JPG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="豪华二八杠复古自行车"></p>
<p>从豪宅出来，开启了逛街模式，街不长，人也不算特别多，总之就是一条很普通的连名字都没记住的街，逛吃逛吃的过程中看到了上海女人，买了四盒，搽手想必是不错的。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1727565-f4bd2021f96e35e3.JPG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="超级好吃的牛肉饼"><br><img src="http://upload-images.jianshu.io/upload_images/1727565-a1f450094d25eb1e.JPG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="某街"></p>
<p>场子赶完之后总算回到了酒店，酒店一般，至少不会太差。我想说的是晚上跟小伙伴们一起吃烧烤超级棒。话说是第一次吃烤羊排，很nice。</p>
<h3 id="Day02"><a href="#Day02" class="headerlink" title="Day02"></a>Day02</h3><p>期待了一晚上的早餐真是很失望额，但是总比没得吃好。哈哈</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1727565-24d9a15f5cdfe326.JPG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="乌镇西栅的大门"><br><img src="http://upload-images.jianshu.io/upload_images/1727565-763d17ad2456dae1.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="经常开会的大剧院"></p>
<p>可是吃完早餐九点半从酒店出发，十点半到乌镇，导游带我们去吃饭，我表示吃不下丫。在乌镇西栅的两个多小时大概就是在拍照，这样的古镇让我想起了苏州的平江路还有七里山塘。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1727565-3ee754239ccad98b.JPG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="染坊"><br><img src="http://upload-images.jianshu.io/upload_images/1727565-cca4fea6052d5dfa.JPG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="在路上一只蚱蜢爬上了某只队友的手臂"></p>
<p>从乌镇出来，导游带我们去到一个很偏僻的超市买特产，感觉自己有毒，明明很重，却还要买23333。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1727565-15aa39f703f43151.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="祈福墙"><br><img src="http://upload-images.jianshu.io/upload_images/1727565-971d62af795a349a.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="乌镇"></p>
<p>最后的最后，去火车站，于是四日三晚游也接近了尾声，从9月16号18点38坐上火车到9月17号18：00终于回到了我的天堂（宿舍）。</p>
<h3 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h3><p>原谅我第一次写游记，感觉像流水章，不过开心就好啦~</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1727565-d7dfedeec0a2d5a7.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="乌镇还是美得啦"></p>
<h3 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h3><p>其实旅游应该是种旅途的享受，静静的观赏美景啊，感受小桥流水人家的生活，也是给自己一个放空心灵的机会。</p>
<p>原谅我厚颜无耻的放个小姐姐的皂骗。</p>
<p><img src="http://opeywooaz.bkt.clouddn.com/20170921.JPG" alt="柚子小姐姐"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1727565-47132055b949a131.JPG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; 
    
    </summary>
    
      <category term="小生活" scheme="http://visugar.com/categories/%E5%B0%8F%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="乌镇" scheme="http://visugar.com/tags/%E4%B9%8C%E9%95%87/"/>
    
      <category term="旅游" scheme="http://visugar.com/tags/%E6%97%85%E6%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title>Babel初体验</title>
    <link href="http://visugar.com/2017/09/19/20170919Babel6test/"/>
    <id>http://visugar.com/2017/09/19/20170919Babel6test/</id>
    <published>2017-09-19T11:44:29.000Z</published>
    <updated>2017-09-19T12:09:15.273Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://opfk7lrr2.bkt.clouddn.com/DSC00937.JPG" alt="天际"></p>
<h3 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h3><p>现在es6很流行，尽管各大浏览器都还不能支持它的新特性，但是小伙伴们还是很中意它呀，于是小小的学习的一下</p>
<h3 id="Babel"><a href="#Babel" class="headerlink" title="Babel"></a>Babel</h3><p>这里我们不介绍es6相关内容，只是说下入坑前奏，记录下如何使用babel来对es6进行转码~</p>
<p><strong>1.准备一个项目（文件夹）</strong></p>
<p>进入到你的项目根目录下，使用下面命令初始化生成一个package.json文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm init</div></pre></td></tr></table></figure></p>
<p><strong>2.安装babel</strong><br>使用下面命令安装全局babel-cli<br><code>npm install --global babel-cli</code></p>
<p><strong>3.设置转码规则并安装插件</strong><br>安装相关插件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"># 最新转码规则</div><div class="line">$ npm install --save-dev babel-preset-latest</div><div class="line"></div><div class="line"># react 转码规则</div><div class="line">$ npm install --save-dev babel-preset-react</div></pre></td></tr></table></figure></p>
<p>现在根目录下新建一个<code>.babelrc</code>文件并添加如下内容：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    &quot;presets&quot;:[</div><div class="line">        &quot;latest&quot;,</div><div class="line">        &quot;react&quot;,</div><div class="line">    ],</div><div class="line">    &quot;plugins&quot;: []</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>新建一个src文件用于放ES6的代码，再新建一个lib文件用于存放转码后的代码，然后在src文件中新建一个index.js文件，里面放点es6的代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">let [x, y, z] = new Set([&apos;a&apos;, &apos;b&apos;, &apos;c&apos;]);</div><div class="line">console.log(x);</div><div class="line">console.log(y);</div><div class="line">console.log(z);</div></pre></td></tr></table></figure></p>
<p>这时候输入下面的命令就可以直接对index.js进行转码了额~<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">babel src/index.js --out-file lib/index.js</div><div class="line">或</div><div class="line">babel src/index.js -o lib/index.js</div></pre></td></tr></table></figure></p>
<p>同时也可以使用 <code>--watch</code>或<code>-w</code> 对转码文件进行监测文件内容的变化：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">babel src/index.js --watch -o lib/index.js</div><div class="line">babel src/index.js -w -o lib/index.js</div></pre></td></tr></table></figure></p>
<p>但是，如果src中有多个文件的话，上面这样就很繁琐，接下来要使用babel的命令来对文件夹下的.es6、.js等所有文件进行转码:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">babel src -d lib</div></pre></td></tr></table></figure></p>
<p>同时可将这行命令配置到package.json中的scripts中：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&quot;scripts&quot;: &#123;</div><div class="line">   &quot;compile&quot;:&quot;babel src -d lib&quot;</div><div class="line"> &#125;,</div></pre></td></tr></table></figure></p>
<p>下一次则直接使用<code>npm run compile</code>即可完成编译。</p>
<p>也可以使用<code>watch</code>对文件夹进行监测:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&quot;scripts&quot;: &#123;</div><div class="line">    &quot;compile&quot;: &quot;babel src -d lib&quot;,</div><div class="line">    &quot;watch-compile&quot;: &quot;babel src -d lib --watch&quot;</div><div class="line">  &#125;,</div></pre></td></tr></table></figure></p>
<p>使用<code>npm run watch-compile</code>命令就只有执行一次，就可以开开心心写ES6了~</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://opfk7lrr2.bkt.clouddn.com/DSC00937.JPG&quot; alt=&quot;天际&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;
    
    </summary>
    
      <category term="Web开发" scheme="http://visugar.com/categories/Web%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="es6" scheme="http://visugar.com/tags/es6/"/>
    
      <category term="babel" scheme="http://visugar.com/tags/babel/"/>
    
  </entry>
  
  <entry>
    <title>CSS3自定义滚动条样式</title>
    <link href="http://visugar.com/2017/08/18/20170818CustomScroll/"/>
    <id>http://visugar.com/2017/08/18/20170818CustomScroll/</id>
    <published>2017-08-18T11:43:01.000Z</published>
    <updated>2017-08-18T11:45:23.854Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://opfk7lrr2.bkt.clouddn.com/DSC01087.JPG?imageView/2/w/800/q/90" alt="落日"></p>
<h4 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h4><p>滚动条是个很常见的东东，不过某些浏览器自带的滚动条确实不太好看啊，下面可以作为学习，探讨下自定义滚动条的实现，这样你的滚动条就可以美美的啦。但是，也只能玩玩，因为只针对webkit内核的浏览器啊啊啊啊啊！</p>
<h4 id="overflow介绍"><a href="#overflow介绍" class="headerlink" title="overflow介绍"></a>overflow介绍</h4><p><strong>定义</strong>：overflow 属性指定当它溢出其块级容器时,是否剪辑内容，渲染滚动条或显示内容。</p>
<p><strong>属性值</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">overflow:visible    //默认值。内容不会被修剪，超出内容会显示在元素框之外</div><div class="line">overflow:hidden     //内容会被修剪。超出内容被隐藏</div><div class="line">overflow:scroll     //内容会被修剪，浏览器会显示滚动条以便查看其余内容</div><div class="line">overflow:auto       //如果内容被修剪，则浏览器会显示滚动条以便查看其余的内容。</div><div class="line">overflow:inherit     //规定从该父元素继承overflow属性的值</div></pre></td></tr></table></figure></p>
<p>注：任何的版本的 Internet Explorer （包括 IE8）都不支持属性值 “inherit”。</p>
<p>当overflow设为除默认值（visible）以外的值时，将会创建一个会<code>块级式化上下文</code>（清除浮动的一种方式），更多可查看深入理解BFC和Margin Collapse<a href="http://www.w3cplus.com/css/understanding-bfc-and-margin-collapse.html" target="_blank" rel="external"></a></p>
<p><strong>小tips</strong></p>
<p>对于当行文本对超出部分的处理可使用一下属性。（同时需设置元素的width值，还有<code>overflow:hidden;</code>及<code>white-space:nowrap;</code>)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">text-overflow:clip       //修剪文本。</div><div class="line">text-overflow:ellipsis   //显示省略符号来代表被修剪的文本。</div><div class="line">text-overflow:string     //使用给定的字符串来代表被修剪的文本。</div></pre></td></tr></table></figure></p>
<p>对于多行文本则需要用到不规范属性<code>-webkit-line-clamp</code>，此处不细讲。<a href="http://www.css88.com/archives/5206/comment-page-1" target="_blank" rel="external">点击此处参考</a></p>
<p><strong>水平及垂直滚动条</strong><br>使用<code>overflow-x</code>和<code>overflow-y</code>可分别设置水平及垂直方向上的滚动条。</p>
<h4 id="自定义滚动条实现"><a href="#自定义滚动条实现" class="headerlink" title="自定义滚动条实现"></a>自定义滚动条实现</h4><p>此部分针对webkit内核的浏览器，使用伪类来改变滚动条的默认样式，详情如下：<br><strong>滚动条组成部分</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">1. ::-webkit-scrollbar                滚动条整体部分</div><div class="line">2. ::-webkit-scrollbar-thumb          滚动条里面的小方块，能向上向下移动（或向左向右移动）</div><div class="line">3. ::-webkit-scrollbar-track          滚动条的轨道（里面装有Thumb）</div><div class="line">4. ::-webkit-scrollbar-button         滚动条的轨道的两端按钮，由于通过点击微调小方块的位置。</div><div class="line">5. ::-webkit-scrollbar-track-piece    内层轨道，滚动条中间部分</div><div class="line">6. ::-webkit-scrollbar-corner         边角，即垂直滚动条和水平滚动条相交的地方</div><div class="line">7. ::-webkit-resizer                  两个滚动条的交汇处上用于拖动调整元素大小的小控件</div></pre></td></tr></table></figure></p>
<p>滚动条组成结构图如下：<br><img src="http://opfk7lrr2.bkt.clouddn.com/20170731scrollbar02.png" alt="组成结构图"></p>
<p>下面来一组简单自定义滚动条的实现：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">&lt;div class=&quot;box box7&quot;&gt;</div><div class="line">    &lt;p&gt;这个属性定义溢出元素内容区的内容会如何处理。如果值为 scroll，不论是否需要， 用户代理都会提供一种滚动机制。因此，有可能即使元素框中可以放下所有内容也 会出现滚动条。 这个属性定义溢出元素内容区的内容会如何处理。如果值为</div><div class="line">        scroll，不论是否需要， 用户代理都会提供一种滚动机制。因此，有可能即使元素框中可以放下所有内容也 会出现滚动条。</div><div class="line">    &lt;/p&gt;</div><div class="line">&lt;/div&gt;</div><div class="line"></div><div class="line"></div><div class="line">.box8::-webkit-scrollbar &#123;</div><div class="line">    width: 12px;</div><div class="line">    background-color: #eee;</div><div class="line">&#125;</div><div class="line"></div><div class="line">.box8::-webkit-scrollbar-track &#123;</div><div class="line">    background-color: #eee;</div><div class="line">&#125;</div><div class="line"></div><div class="line">.box8::-webkit-scrollbar-thumb &#123;</div><div class="line">    background: #3DB6A4;</div><div class="line">&#125;</div><div class="line"></div><div class="line">.box8::-webkit-scrollbar-button:start &#123;</div><div class="line">    background: url(./imgs/up.png) no-repeat;</div><div class="line">    background-size: 12px 12px;</div><div class="line">&#125;</div><div class="line"></div><div class="line">.box8::-webkit-scrollbar-button:end &#123;</div><div class="line">    background: url(./imgs/down.png) no-repeat;</div><div class="line">    background-size: 12px 12px;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>更多效果如下图：<br><img src="http://opfk7lrr2.bkt.clouddn.com/20170731overflow.png" alt="自定义滚动条"></p>
<p><strong>注意只在chrome下有效！！！！！！</strong></p>
<p><a href="https://github.com/visugar/FrontEnd-examples/blob/master/12%E8%87%AA%E5%AE%9A%E4%B9%89%E6%BB%9A%E5%8A%A8%E6%9D%A1%E6%A0%B7%E5%BC%8F/index.html" target="_blank" rel="external">源码地址</a></p>
<p><a href="http://visugar.com/FrontEnd-examples/12%E8%87%AA%E5%AE%9A%E4%B9%89%E6%BB%9A%E5%8A%A8%E6%9D%A1%E6%A0%B7%E5%BC%8F/index.html">预览地址</a></p>
<h4 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h4><ul>
<li>无法兼容各大浏览器，只能在chrome下耍耍</li>
<li>本文仅作参考，更多内容请看参考资料</li>
</ul>
<h4 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h4><ul>
<li><a href="http://www.xuanfengge.com/css3-webkit-scrollbar.html" target="_blank" rel="external">CSS3自定义滚动条样式 -webkit-scrollbar</a></li>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/overflow" target="_blank" rel="external">overflow-MDN</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://opfk7lrr2.bkt.clouddn.com/DSC01087.JPG?imageView/2/w/800/q/90&quot; alt=&quot;落日&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;header
    
    </summary>
    
      <category term="Web开发" scheme="http://visugar.com/categories/Web%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="前端" scheme="http://visugar.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="css" scheme="http://visugar.com/tags/css/"/>
    
      <category term="scrollbar" scheme="http://visugar.com/tags/scrollbar/"/>
    
  </entry>
  
  <entry>
    <title>Web Animations API (JS动画利器)</title>
    <link href="http://visugar.com/2017/08/09/20170809WebAnimations/"/>
    <id>http://visugar.com/2017/08/09/20170809WebAnimations/</id>
    <published>2017-08-09T11:01:03.000Z</published>
    <updated>2017-08-09T11:06:33.814Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://opfk7lrr2.bkt.clouddn.com/DSC00539.JPG?imageView/2/w/800/q/90" alt="哥哥"></p>
<h4 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h4><p>之前学习了CSS animation/setTimeout/setInterval/requestAnimationFrame等，这些都可以用在某种场景下的小动画，也可以说是动效。CSS动画君居然强大，但是缺陷也很多啊，有的时候没法满足要求，定时器用在动画中就更不使用了，但是requestAnimationFrame也是个很强大的东西，具体详情移步到<a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Window/requestAnimationFrame" target="_blank" rel="external">window.requestAnimationFrame</a><a href="https://www.w3cplus.com/animaton/animations-you-should-know.html" target="_blank" rel="external">关于动画，你需要知道的 </a><a href="http://www.zhangxinxu.com/wordpress/2013/09/css3-animation-requestanimationframe-tween-%e5%8a%a8%e7%94%bb%e7%ae%97%e6%b3%95/" target="_blank" rel="external">requestAnimationFrame-张鑫旭</a>这几篇文章。下面做的笔记是关于Web Animations API (WAAPI)的，也就是js中的animate。</p>
<h4 id="web-animations-API"><a href="#web-animations-API" class="headerlink" title="web animations API"></a>web animations API</h4><p>对于waapi，可能大家对css animation更熟悉，下面先看下css animation的用法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">.item1&#123;</div><div class="line">    animation: rotate  4s inifite ease running;</div><div class="line">&#125;</div><div class="line">@keyframes rotate&#123;</div><div class="line">    from&#123;</div><div class="line">        transform：rotate(0);</div><div class="line">    &#125;</div><div class="line">    to&#123;</div><div class="line">        transform:rotate(360deg);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">或者</div><div class="line">@keyframes rotate&#123;</div><div class="line">    0%&#123;</div><div class="line">        transform：rotate(0);</div><div class="line">        background-color：red;</div><div class="line">    &#125;</div><div class="line">    40%&#123;</div><div class="line">        background-color：blue;</div><div class="line">    &#125;</div><div class="line">    100%&#123;</div><div class="line">        transform:rotate(360deg);</div><div class="line">        background-color:red;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>平时用的较多的是百分比类型的，可以定义多个关键帧。下面来看看waapi版本的：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">var ani1 = [</div><div class="line">        &#123;transform:&apos;rotate(0)&apos;,backgroundColor:&apos;red&apos;&#125;,</div><div class="line">        &#123;backgroundColor:&apos;blue&apos;,offset:0.4&#125;,</div><div class="line">        &#123;transform:&apos;rotate(360deg)&apos;,backgroundColor:&apos;red&apos;&#125;</div><div class="line">    ];</div><div class="line">    var aniOpt1 = &#123;</div><div class="line">        duration:4000,</div><div class="line">        iterations:Infinity,</div><div class="line">        easing:&apos;ease-in-out&apos;</div><div class="line">    &#125;;</div><div class="line"></div><div class="line">    document.querySelector(&quot;.item1&quot;).animate(ani1,aniOpt1);</div></pre></td></tr></table></figure></p>
<p><code>Element.animate()</code> 元素调用后会立即执行。跟css3动画有点类似但是有很多小区别，列如：</p>
<ol>
<li>css3动画中用的时间单位为s，而wappi中使用的与setTimeout等定时器的单位及写法一致（单位为ms且可省略）</li>
<li>waapi中关键帧的值传入的是字符串类型，与css3不一样。</li>
<li>waapi中不再有百分数，而是用offset来设置关键帧的位置。</li>
<li>css3动画中animation-duration变为duriation，animation-iteration-count则变成iterations，且其无限次的值由字符串’infinite’变成关键字Infinity。等等还有其他一些元素的改变，从单词来讲变得更简洁了。</li>
</ol>
<p>如果只需设置duration属性，则可采用下面这种更简洁的方式：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">document.querySelector(&quot;.item1&quot;).animate(ani1,4000);</div></pre></td></tr></table></figure></p>
<p>document.animate()可以应用在任何可以使用CSS动画的DOM元素上，下面是几个waapi更强大的控制方法：</p>
<p><strong>play()，pause()，reverse()和playbackRate控制播放</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">var rotateAni = document.querySelector(&quot;.item1&quot;).animate(ani1,aniOpt1);</div><div class="line">rotateAni.play() //播放</div><div class="line">rotateAni.pause() //暂停</div></pre></td></tr></table></figure></p>
<p>注：在动画执行的时候可以在控制台打印下rotateAni，能够看到rotateAni所带的一些属性值及原型上的方法(此时playbackRate的值为1)。<br><img src="http://opif0c56u.bkt.clouddn.com/20170728rotateAni.png" alt="打印正在执行的动画"></p>
<p>然后发现除了上面这几个之外还有一些其他的属性及方法，再挑几个说一下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">finish()  //对于有限次的动画而言，直接停止动画，且跳到动画结束位置</div><div class="line">cancel()  //取消动画过程，直接跳到动画的开始位置</div><div class="line">reverse() //让动画反向执行到动画执行的原点,会将playbackTate从1变成-1</div></pre></td></tr></table></figure></p>
<p><strong>playbackRate属性</strong><br><code>reverse()</code>方法可将playbackRate的值改变。如果手动将playbackRate改成一个0-1之间的数值，则可将动画慢下来。设成大于1的值则可使动画加速。</p>
<p><strong>获取动画信息</strong><br>还有一些方法尚在实验中额，等浏览器可支持后再用起来。。。</p>
<p><strong>wappi的事件监听</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">onfinish:用于注册完成事件，当调用finish()方法是也可以触发。</div><div class="line">oncancel:用于注册取消事件，当调用cancel()方法是也可以触发。</div><div class="line"></div><div class="line">rotateAni.onfinish = function()&#123;</div><div class="line">    doSomething();</div><div class="line">&#125;</div><div class="line">rotateAni.oncancel = function()&#123;</div><div class="line">    doSomething();</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="浏览器支持度"><a href="#浏览器支持度" class="headerlink" title="浏览器支持度"></a>浏览器支持度</h4><p>一图胜前言<a href="https://caniuse.com/#search=web%20animations%20api" target="_blank" rel="external">can i use</a><br><img src="http://opif0c56u.bkt.clouddn.com/20170728compare.png" alt="浏览器对waapi的支持"></p>
<h4 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h4><ol>
<li>由于目前浏览器支持度不算高，所以呢还是要慎用。</li>
<li>在现代浏览器中，使用wappi可以做出很酷的动画，可以多试试。</li>
<li>本文也只算是学习笔记，所以欢迎大佬们指点额~</li>
</ol>
<h4 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h4><ul>
<li><a href="https://www.w3cplus.com/animation/waapi.html" target="_blank" rel="external">WAAPI-w3cplus</a></li>
<li><a href="https://www.w3cplus.com/animation/css-animations-vs-web-animations-api.html" target="_blank" rel="external">web animations-w3cplus</a></li>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Web_Animations_API/Using_the_Web_Animations_API" target="_blank" rel="external">Web Animations API-MDN</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://opfk7lrr2.bkt.clouddn.com/DSC00539.JPG?imageView/2/w/800/q/90&quot; alt=&quot;哥哥&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;header
    
    </summary>
    
      <category term="Web开发" scheme="http://visugar.com/categories/Web%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="前端" scheme="http://visugar.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="动画" scheme="http://visugar.com/tags/%E5%8A%A8%E7%94%BB/"/>
    
      <category term="js" scheme="http://visugar.com/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客添加SEO-评论系统-阅读统计-站长统计</title>
    <link href="http://visugar.com/2017/08/01/20170801HexoPlugins/"/>
    <id>http://visugar.com/2017/08/01/20170801HexoPlugins/</id>
    <published>2017-08-01T11:49:26.000Z</published>
    <updated>2017-09-03T01:41:14.257Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://opfk7lrr2.bkt.clouddn.com/DSC07450.JPG?imageView/2/w/800/q/80" alt="丹霞山"></p>
<h3 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h3><p>在五月出捣腾了一把个人博客，但是刚开始只做了一些基础设置，套路也没摸清，基础安装篇请看<a href="http://visugar.com/2017/05/04/20170504SetUpHexoBlog/">hexo从零开始到搭建完整</a>,里面讲到了基础工具的安装及blog项目的文件夹含义，以及RSS添加、域名的绑定等操作，后来想着加点功能，但是奈何我选的主题集成的东西比较少，需要一步一步自己添加，于是摸索了一番。。。现在真是发现了next主题的好处，不仅持续更新，而且作者已经在主题中集成了各种功能，简直爽歪歪，不过我还是默默的接着摸索吧！下面介绍几种好用的东西。</p>
<ol>
<li>推荐七牛云</li>
<li>添加百度SEO</li>
<li>添加谷歌SEO</li>
<li>添加评论系统来必力</li>
<li>百度统计</li>
<li>文章统计leanCloud</li>
<li>引入站长统计不蒜子</li>
</ol>
<h3 id="七牛云"><a href="#七牛云" class="headerlink" title="七牛云"></a>七牛云</h3><p>先给大兄弟们极力推荐个好用的图床工具<code>七牛云</code>。么么<br><img src="http://opif0c56u.bkt.clouddn.com/20170731sevenCowCloud.png" alt="七牛云"><br>注：上传后的图片尽量不要修改和删除额，不然之前添加的链接就会失效啦</p>
<h3 id="添加百度SEO"><a href="#添加百度SEO" class="headerlink" title="添加百度SEO"></a>添加百度SEO</h3><p>为了增加文章的曝光率，让别人更容易搜到你的文章，那就添加SEO吧，不过好像要下面介绍下加入百度SEO的步骤：</p>
<p>在百度中输入<code>site:yourwebsite</code>,好像要绑定了域名的网址才可以额，直接github.io的好像不行，<a href="http://zhanzhang.baidu.com/site/index?site=http://www.visugar.com/" target="_blank" rel="external">百度站长平台</a>。<br><img src="http://opif0c56u.bkt.clouddn.com/20170731bdseo00.png" alt="检验你的网址"></p>
<p>填写要提交的网址：<br><img src="http://opif0c56u.bkt.clouddn.com/20170731bdseo01.png" alt="提交网址"></p>
<p>选择站点的相关属性：<br><img src="http://opif0c56u.bkt.clouddn.com/20170731bdseo02.png" alt="选择站点属性"></p>
<p>验证你的网站（这里有三种方法，你任选一种就好了，我试了后面两种，操作简单方便。我最后使用的是第三种添加一条解析）：<br><img src="http://opif0c56u.bkt.clouddn.com/20170731bdseo3.png" alt="文件验证"><br><img src="http://opif0c56u.bkt.clouddn.com/20170731bdseo4.png" alt="HTML验证网站"></p>
<p><img src="http://opif0c56u.bkt.clouddn.com/20170731bdseo5.png" alt="CNAME验证网站"></p>
<p>CNAME验证方式如下，记录类型选CNAME，主机记录就填百度给的,记录值为zz.baidu.com。<br><img src="http://opif0c56u.bkt.clouddn.com/20170731bdseo09.png" alt="CNAME验证"></p>
<p>接下来要让你的网站生成网站地图，及生产sitemap，将sitemap提交到百度，先安装地图生成插件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">npm install hexo-generator-sitemap --save</div><div class="line">npm install hexo-generator-baidu-sitemap --save</div></pre></td></tr></table></figure></p>
<p>然后查看是否在根目录的<code>_config.xml</code>配置文件下添加了你的url：<br><img src="http://opif0c56u.bkt.clouddn.com/20170731bdseo11.png" alt="添加url"><br>重新部署后即可在public文件下看到sitemap.xml和baidusitemap.xml文件，在浏览器中输入你的网址/sitemap.xml即可看到所生成的地图文件，表示安装成功。<br><img src="http://opif0c56u.bkt.clouddn.com/20170731bdmap.png" alt="sitemap"></p>
<p>接着是提交你的sitemap到百度，点击<code>链接提交</code>进行提交。分为自动提交和手动提交。自动提交提供了3中方式，可以都使用，也可以只使用其中的一种：<br><img src="http://opif0c56u.bkt.clouddn.com/20170731bdseo12.png" alt="提交sitemap"><br>根据提示操作即可。建议采用自动提交额，手动提交会累死人</p>
<p>然后进行死链提交：<br><img src="http://opif0c56u.bkt.clouddn.com/20170731bdseo010.png" alt="死链提交"><br>提交完了等着就好了，可能要很久才生效。。。</p>
<h3 id="添加谷歌SEO"><a href="#添加谷歌SEO" class="headerlink" title="添加谷歌SEO"></a>添加谷歌SEO</h3><p>作为程序boy，google是少不了的，所以也把你的网站加到谷歌SEO吧，添加到谷歌的话很快就能生效的额，大概只要几分钟吧，添加起来也是比较简单滴。当然要先自备天梯。。。</p>
<p>敲黑板！首先得有个谷歌账号，自由发挥吧，然后到这里<a href="https://www.google.com/webmasters/verification/home?hl=zh-CN&amp;theme=wmt&amp;continue=https://www.google.com/webmasters/tools/change-address?hl%3Dzh-CN%26siteUrl%3Dhttp://visugar.com/%26sig%3DALjLGbO6-M1mTuGz1Y5Up7WSkGHtUoE4MQ%26sig%3DALjLGbPf2LcvrtswfByhZmozORjZiSc52A" target="_blank" rel="external">添加地址</a>去添加你的网址。</p>
<p>也可以现在google总共输入如下内容，然后进入到添加网站的地址：<br><img src="http://opif0c56u.bkt.clouddn.com/20170731google01.png" alt="验证网址"></p>
<p>点击<code>添加属性</code>后即可添加你的博客地址。<br><img src="http://opif0c56u.bkt.clouddn.com/20170731google02.png" alt="添加属性"></p>
<p>添加完成之后进行网站验证，我使用的貌似是备用方法，比较便捷。<br><img src="http://opif0c56u.bkt.clouddn.com/20170731google03.png" alt="网站验证"><br><img src="http://opif0c56u.bkt.clouddn.com/20170731google04.png" alt="备用方法"></p>
<p>添加好之后稍等一会儿再Google中输入关键字，就可以看到效果啦<br><img src="http://opif0c56u.bkt.clouddn.com/20170731google05.png" alt="查看你的博客"></p>
<h3 id="添加评论系统来必力"><a href="#添加评论系统来必力" class="headerlink" title="添加评论系统来必力"></a>添加评论系统来必力</h3><p>评论系统真是个令我伤心的东西，我用的<code>hueman</code>主题也是集成了几种评论系统的，但是都是坑啊，disqus是国外的额。畅言是要备案的，友言的感觉不是很好看，之前很强大多说在6月1号关了，转战云更贴，结果宣布在8月1号正式停用。嗯！就是今天，<code>八一建军节九十周年</code>！此处比心~</p>
<p>其实后面才知道有来必力这玩意儿的，第一眼看它还有点不顺眼，原因你懂的，后来发现用的人还挺多的，于是最后还是被它征服了</p>
<p><a href="https://livere.com/" target="_blank" rel="external">官网传送门</a>，注册的时候会出现点韩语，不过莫慌，该看懂的还是看的懂额，嗯就酱。</p>
<p>注册好后到管理页面去：<br><img src="http://opif0c56u.bkt.clouddn.com/20170731livebe01.png" alt="点击管理页面"></p>
<p>在<code>代码管理</code>中获取安装代码：<br><img src="http://opif0c56u.bkt.clouddn.com/20170731livebe02.png" alt="安装代码"><br>（此处针对的是hueman主题，其他的应该类似）获取安装代码后，在主题的comment下新建一个文件放入刚刚那段代码，再找到article文件，找到如下代码，若没有则直接在footer后面添加即可。livebe即为刚刚所创文件名称。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;%- partial(&apos;comment/livebe&apos;) %&gt;</div></pre></td></tr></table></figure></p>
<p>完成上面步骤之后可选择性进行一些相关配置，如下：<br><img src="http://opif0c56u.bkt.clouddn.com/20170731livebe03.png" alt="相关配置"></p>
<p>重新部署博客后即可看到效果：<br><img src="http://opif0c56u.bkt.clouddn.com/20170731livebe04.png" alt="效果图"></p>
<h3 id="添加百度统计"><a href="#添加百度统计" class="headerlink" title="添加百度统计"></a>添加百度统计</h3><p>百度统计也是个好东西，因为可以看到一些很详细的信息！</p>
<p><a href="https://tongji.baidu.com/sc-web/24289468/home/site/index?from=3" target="_blank" rel="external">百度统计传送门</a></p>
<p>在管理这一栏先把要统计的网站添加进来：<br><img src="http://opif0c56u.bkt.clouddn.com/20170731tg1.png" alt="添加网站"></p>
<p>然后找到代码获取，进行代码安装：<br><img src="http://opif0c56u.bkt.clouddn.com/20170731tg02.png" alt="代码安装"></p>
<p>代码安装好后重新部署，再回到百度统计中进行代码安装检查，安装正确即可。</p>
<p>差不多等个半小时吧，再进入到报告这一栏即可查看相关数据了。</p>
<h3 id="文章阅读量统计leanCloud"><a href="#文章阅读量统计leanCloud" class="headerlink" title="文章阅读量统计leanCloud"></a>文章阅读量统计leanCloud</h3><p>对于文章数量的统计，leanCloud是个好东西，<a href="https://leancloud.cn/" target="_blank" rel="external">官网传送门</a>，leanCloud功能繁多，你可以好好的利用一番，这里主要讲文章阅读数量。</p>
<p>乖乖注册好账号之后去添加一个应用：<br><img src="http://opif0c56u.bkt.clouddn.com/20170731leanCloud01.png" alt="创建应用"></p>
<p>点击你的应用右上角的齿轮，进入到配置页面：<br><img src="http://opif0c56u.bkt.clouddn.com/20170731leanCloud02.png" alt="设置页面"></p>
<p>在存储这一栏中创建一个新的Class Name：<br><img src="http://opif0c56u.bkt.clouddn.com/20170731leanCloud03.png" alt="新建Class Name"></p>
<p>新的Class Name为Counter：<br><img src="http://opif0c56u.bkt.clouddn.com/20170731leanCloud04.png" alt="Counter"></p>
<p>然后在设置页面的应用Key可查看到你的App ID及App Key：<br><img src="http://opif0c56u.bkt.clouddn.com/20170731leanCloud05.png" alt="查看信息"></p>
<p>在主题的配置文件下添加如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">//若主题已集成则只需要加此段</div><div class="line">leancloud_visitors:</div><div class="line">  enable: true</div><div class="line">  app_id: 你的id</div><div class="line">  app_key: 你的key</div></pre></td></tr></table></figure></p>
<p>在article中适当的位置添加如下（取决于你要将它显示在何处）：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">阅读数量:&lt;span id=&quot;&lt;%= url_for(post.path) %&gt;&quot; class=&quot;leancloud_visitors&quot; data-flag-title=&quot;&lt;%- post.title %&gt;&quot;&gt;&lt;/span&gt;次</div></pre></td></tr></table></figure></p>
<p>在footer的最后添加如下代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line">&lt;script src=&quot;//cdn1.lncld.net/static/js/2.5.0/av-min.js&quot;&gt;&lt;/script&gt;</div><div class="line">&lt;script&gt;</div><div class="line">    var APP_ID = &apos;你的app id&apos;;</div><div class="line">    var APP_KEY = &apos;你的app key&apos;;</div><div class="line">    AV.init(&#123;</div><div class="line">        appId: APP_ID,</div><div class="line">        appKey: APP_KEY</div><div class="line">    &#125;);</div><div class="line">    // 显示次数</div><div class="line">    function showTime(Counter) &#123;</div><div class="line">        var query = new AV.Query(&quot;Counter&quot;);</div><div class="line">        if($(&quot;.leancloud_visitors&quot;).length &gt; 0)&#123;</div><div class="line">            var url = $(&quot;.leancloud_visitors&quot;).attr(&apos;id&apos;).trim();</div><div class="line">            // where field</div><div class="line">            query.equalTo(&quot;words&quot;, url);</div><div class="line">            // count</div><div class="line">            query.count().then(function (number) &#123;</div><div class="line">                // There are number instances of MyClass where words equals url.</div><div class="line">                $(document.getElementById(url)).text(number?  number : &apos;--&apos;);</div><div class="line">            &#125;, function (error) &#123;</div><div class="line">                // error is an instance of AVError.</div><div class="line">            &#125;);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    // 追加pv</div><div class="line">    function addCount(Counter) &#123;</div><div class="line">        var url = $(&quot;.leancloud_visitors&quot;).length &gt; 0 ? $(&quot;.leancloud_visitors&quot;).attr(&apos;id&apos;).trim() : &apos;icafebolger.com&apos;;</div><div class="line">        var Counter = AV.Object.extend(&quot;Counter&quot;);</div><div class="line">        var query = new Counter;</div><div class="line">        query.save(&#123;</div><div class="line">            words: url</div><div class="line">        &#125;).then(function (object) &#123;</div><div class="line">        &#125;)</div><div class="line">    &#125;</div><div class="line">    $(function () &#123;</div><div class="line">        var Counter = AV.Object.extend(&quot;Counter&quot;);</div><div class="line">        addCount(Counter);</div><div class="line">        showTime(Counter);</div><div class="line">    &#125;);</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure></p>
<p>重启之后即可看到效果。</p>
<h3 id="引入站长统计不蒜子"><a href="#引入站长统计不蒜子" class="headerlink" title="引入站长统计不蒜子"></a>引入站长统计<code>不蒜子</code></h3><p>文章阅读量可以用leanCloud，那么整站统计用不蒜子还是比较方便的，只需要在footer中适当的位置添加如下代码<a href="http://busuanzi.ibruce.info/" target="_blank" rel="external">不蒜子传送门</a>，重新部署即可：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;script async src=&quot;//dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js&quot;&gt;&lt;/script&gt;</div><div class="line">            &lt;span id=&quot;busuanzi_container_site_pv&quot;&gt;本站总访问量&lt;span id=&quot;busuanzi_value_site_pv&quot;&gt;&lt;/span&gt;次&lt;/span&gt;</div></pre></td></tr></table></figure></p>
<p>不蒜子可自行DIY~</p>
<h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><ol>
<li>搞完这些之后你会发现满满的都是账号，/(ㄒoㄒ)/~~</li>
<li>这些可自行选择用一些，不需要都用上额</li>
<li>终于要告一段落了，有的时候为了这个东东，也是很费时啊，不过弄完之后也是挺开心的，加油吧少年！</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://opfk7lrr2.bkt.clouddn.com/DSC07450.JPG?imageView/2/w/800/q/80&quot; alt=&quot;丹霞山&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;heade
    
    </summary>
    
      <category term="Web开发" scheme="http://visugar.com/categories/Web%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="hexo博客" scheme="http://visugar.com/tags/hexo%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="评论系统" scheme="http://visugar.com/tags/%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/"/>
    
      <category term="来必力" scheme="http://visugar.com/tags/%E6%9D%A5%E5%BF%85%E5%8A%9B/"/>
    
      <category term="文章统计" scheme="http://visugar.com/tags/%E6%96%87%E7%AB%A0%E7%BB%9F%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>定时器（setTimeout）的秘密</title>
    <link href="http://visugar.com/2017/07/28/20170728setTimeout/"/>
    <id>http://visugar.com/2017/07/28/20170728setTimeout/</id>
    <published>2017-07-28T14:32:46.000Z</published>
    <updated>2017-07-28T14:37:25.605Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://opfk7lrr2.bkt.clouddn.com/DSC00935.JPG?viewImage/2/w/600/q/90" alt="美美哒武功山"></p>
<h4 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h4><p>setTimeout()是大家再熟悉不过的定时器，但平时对定时器的了解甚少，于是想看看setTimeout()的原理机制。</p>
<h4 id="setTimeout-基础"><a href="#setTimeout-基础" class="headerlink" title="setTimeout()基础"></a>setTimeout()基础</h4><p>setTimeout()函数用来指定某个函数或某段代码，在多少毫秒之后执行。它返回一个整数，表示定时器的编号，以后可以用来取消这个定时器。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">var timeer = setTimeout(function|code,delay);</div></pre></td></tr></table></figure></p>
<p>注：其中为code时需要以字符串形式传入，一般都是使用传入function的形式。</p>
<blockquote>
<p>setTimeout(func,delay,arg1,arg2···)</p>
</blockquote>
<p>setTimeout()可传入多个参数，第三个参数起是作为回调函数的参数传入。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">function add(a,b)&#123;</div><div class="line">    console.log(a+b);</div><div class="line">&#125;</div><div class="line">setTimeout(add,4000,20,30);  //20和30作为add的参数传入 结果为50</div></pre></td></tr></table></figure></p>
<p>HTML5规定setTimeout()的最短时间间隔是4ms，对于不处在当前窗口的页面，浏览器会将时间间隔扩大到1000ms，若笔记本电脑处于电池供电状态，chrome及IE9以上版本，会将时间间隔切换到系统定时器，约15.6ms。</p>
<h4 id="setTimeout-中回调函数的指向"><a href="#setTimeout-中回调函数的指向" class="headerlink" title="setTimeout()中回调函数的指向"></a>setTimeout()中回调函数的指向</h4><p>setTimeout()回调函数调用的是某个对象的方法，则其中this指向的是setTimeout所处的环境而并非指向该对象环境。</p>
<p>可使用ES5中的bind()方法解决this指向，即将对象环境绑定到要执行的回调函数上即可。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">var name = &apos;lily&apos;;</div><div class="line">function Person(name)&#123;</div><div class="line">    this.name = name;</div><div class="line">    this.printName = function()&#123;</div><div class="line">        console.log(this.name);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">var person01 = new Person(&apos;jike&apos;);</div><div class="line"></div><div class="line"> //此处的this.name为window下的name，所以是&apos;lily&apos;</div><div class="line">window.setTimeout(person01.printName,1000);</div><div class="line"></div><div class="line">//此处将printName绑定在person01上，所以this.name的值为&apos;jike&apos;</div><div class="line">window.setTimeout(person01.printName.bind(person01),2000);</div><div class="line"></div><div class="line">//将printName中的this.name与person01限定在同一个作用域中，所以结果是&apos;jike&apos;</div><div class="line">window.setTimeout(function()&#123;person01.printName();&#125;,3000);</div><div class="line"></div><div class="line">//借助ES6中的箭头函数也可以解决问题</div><div class="line">window.setTimeout(() =&gt; &#123;person01.printName&#125;,1000);</div></pre></td></tr></table></figure></p>
<h4 id="setTimeout运行机制"><a href="#setTimeout运行机制" class="headerlink" title="setTimeout运行机制"></a>setTimeout运行机制</h4><p>setTimeout()和setInterval()的运行机制是，将指定的代码移出本次执行，等到下一轮Event Loop时，再检查是否到了指定时间。如果到了，就执行对应的代码；如果不到，就等到再下一轮Event Loop时重新判断。这意味着，setTimeout()指定的代码，必须等到本次执行的所有代码都执行完，才会执行。</p>
<p>例如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">task1();</div><div class="line">setTimeout(otherTask,1000);</div><div class="line">task2();</div></pre></td></tr></table></figure></p>
<p>其中task1和task2为立即执行任务，otherTask被指定在1s后执行，此时otherTask被添加到任务队列的尾部，要等当前的脚本中Event Loop的任务队列全部执行完成后，才开始执行otherTask，但如果task1和task2很耗时，前面的任务超过1s还未结束，此时otherTask只能等task1和task2运行结束，才会执行otherTask。</p>
<h4 id="setTimeout-func-0-的运用"><a href="#setTimeout-func-0-的运用" class="headerlink" title="setTimeout(func,0)的运用"></a>setTimeout(func,0)的运用</h4><p>当延迟时间设为0时，即当前任务队列一结束就立即执行func。（换个角度说就是同步任务的任务队列结束后尽早执行。）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">task01();</div><div class="line">setTimeout(function()&#123;</div><div class="line">    console.log(&apos;hello!&apos;);  //在task01和task02结束后立即打印hello!</div><div class="line">&#125;,0)</div><div class="line">task02();</div></pre></td></tr></table></figure></p>
<p>0ms在实际上是达不到的，根据HTML5标准，setTimeout()推迟执行的时间最少是4ms，如果小于这个值，会被自动增加到4，同时也是为了防止多个setTimeout(func,0)语句连续执行，造成性能问题。</p>
<ul>
<li>setTimeout(func,0)可以调整事件的发生顺序。</li>
</ul>
<h4 id="clearTimeout"><a href="#clearTimeout" class="headerlink" title="clearTimeout()"></a>clearTimeout()</h4><p>setTimeout()和setInterval()函数，都返回一个表示计数器编号的整数值，将该整数传入clearTimeout()和clearInterval()函数，就可以取消对应的定时器。两种定时器用的同一个编号池。</p>
<p>setTimeout()和setInterval()函数返回的整数值都是连续的，因此可以利用循环来清除所有的定时器。</p>
<h4 id="防抖动（debounce）"><a href="#防抖动（debounce）" class="headerlink" title="防抖动（debounce）"></a>防抖动（debounce）</h4><p>该方法用于防止某个函数在短时间内被密集调用，具体来具体来说，debounce方法返回一个新版的该函数，这个新版函数调用后，只有在指定时间内没有新的调用，才会执行，否则就重新计时。</p>
<p>实际中不要设置太多个setTimeout()和setInterval(),它们耗费CPU，理想做法是将要延迟执行的代码都放在同一个函数里，然后支队这个函数使用setTimeout()和setInterval()。</p>
<h4 id="setInterval"><a href="#setInterval" class="headerlink" title="setInterval()"></a>setInterval()</h4><p>setInterval()使用原理机制与setTimeout()一样，区别就是setInterval()是每隔多少ms执行一次回调函数。也可以传入大于两个参数。</p>
<p>setInterval()指定的是“开始执行”之间的间隔，并不考虑每次任指定的是“开始执行”之间的间隔，并不考虑每次任，比如，setInterval()指定每100ms执行一次，每次执行需要5ms，那么第一次执行后95ms后，第二次执行就会开始。如果某次执行需要105ms，即超过了delay时间，则执行结束后下一次执行就会立即开始。</p>
<p>setInterval()的最短间隔是10ms，小于10ms的时间间隔会被调整到10ms</p>
<p>setInterval()具有累积效应，如果某个操作特别耗时，超过了setInterval()的时间间隔，排在后面的操作就会被累积起来，然后在很短的时间内连续触发，这可能会造成性能问题。</p>
<h4 id="资源参考"><a href="#资源参考" class="headerlink" title="资源参考"></a>资源参考</h4><ul>
<li><a href="https://www.w3cplus.com/blog/2103.html" target="_blank" rel="external">你所不知道的setTimeout</a></li>
<li><a href="https://www.w3cplus.com/javascript/javaScript-setInterval.html" target="_blank" rel="external">你所不知道的setInterval</a></li>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Window/setTimeout" target="_blank" rel="external">setTimeout-MDN</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://opfk7lrr2.bkt.clouddn.com/DSC00935.JPG?viewImage/2/w/600/q/90&quot; alt=&quot;美美哒武功山&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;he
    
    </summary>
    
      <category term="Web开发" scheme="http://visugar.com/categories/Web%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="前端" scheme="http://visugar.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="setTimeout" scheme="http://visugar.com/tags/setTimeout/"/>
    
      <category term="定时器" scheme="http://visugar.com/tags/%E5%AE%9A%E6%97%B6%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>拖放API中的drag和drop实战</title>
    <link href="http://visugar.com/2017/07/25/20170725DragAndDrop/"/>
    <id>http://visugar.com/2017/07/25/20170725DragAndDrop/</id>
    <published>2017-07-25T11:35:17.000Z</published>
    <updated>2017-07-28T14:34:26.772Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://opfk7lrr2.bkt.clouddn.com/DSC00494.JPG?imageView/2/w/800/q/90" alt="漫山遍野"></p>
<h4 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h4><p>在HTML5之前，实现拖放功能需要借助mousedown/mousemove/mouseover/mouseout/mouseup等鼠标事件来完成，HTML5中拖放API的出现使很多事情变简单。下面是做笔记做笔记~</p>
<ul>
<li><a href="https://github.com/visugar/FrontEnd-examples/blob/master/08H5%E6%8B%96%E6%94%BEAPI/index.html" target="_blank" rel="external">源码地址</a></li>
<li><a href="https://visugar.github.io/FrontEnd-examples/08H5%E6%8B%96%E6%94%BEAPI/index.html" target="_blank" rel="external">栗子预览1</a></li>
<li><a href="https://visugar.github.io/FrontEnd-examples/08H5%E6%8B%96%E6%94%BEAPI/drag01.html" target="_blank" rel="external">栗子预览2</a></li>
<li><a href="https://visugar.github.io/FrontEnd-examples/08H5%E6%8B%96%E6%94%BEAPI/drag02.html" target="_blank" rel="external">栗子预览3</a></li>
</ul>
<h4 id="拖放过程"><a href="#拖放过程" class="headerlink" title="拖放过程"></a>拖放过程</h4><p>拖放：包括拖拽（drag）和释放（drop）</p>
<p>拖放中涉及两个元素，分别是：源对象和目标对象，如下图<br>源对象是被拖拽的元素，目标对象是要释放到的接收元素。<br><img src="http://opif0c56u.bkt.clouddn.com/20170725drag10.png" alt="源对象和目标对象"></p>
<p>拖放事件：</p>
<p><img src="http://opif0c56u.bkt.clouddn.com/20170725event.png" alt="拖放事件流"></p>
<p><code>拖放事件流</code>为拖放操作开始后触发的一系列事件，分为以下两类：</p>
<p>发生在源对象上的事件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">dragstart:用户开始拖动页面中的某个元素时触发的事件</div><div class="line">drag: 源对象在拖拽过程中持续触发的事件</div><div class="line">dragend:拖动完成时触发的事件，一般用于清空拖动过程中的状态等。</div></pre></td></tr></table></figure></p>
<p>发生在目标对象上的事件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">dragenter:源对象进入到目标对象时，会触发目标对象的ondragenter事件</div><div class="line">dragleave:源对象移除之前调用了dragenter的元素时，目标元素触发的事件</div><div class="line">dragover：源对象进入目标对象后持续触发的事件</div><div class="line">drop：用户释放鼠标时，drop会在目标对象上被调用</div></pre></td></tr></table></figure></p>
<p>设置元素可拖动<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">dragable = &quot;true&quot;</div></pre></td></tr></table></figure></p>
<p> 传输和控–dataTransfer</p>
<p><code>dataTransfer</code>对象可用于每个拖放事件中。用于获取和设置实际放置的数据，主要属性及方法如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">setData(format,data):在dragstart事件中调用此函数可以注册一个MIME类型格式的传输项。</div><div class="line">getData(format):可以获取指定类型的注册数据项。</div><div class="line">types：属性以数组形式返回所有当前注册的格式。</div><div class="line">items：返回所有项机器相关格式列表</div><div class="line">files：返回与放置相关的所有文件</div><div class="line">clearData():不带参则清空所有注册数据，带参则移除指定注册项</div><div class="line">…………等等</div></pre></td></tr></table></figure></p>
<h4 id="来点儿小栗子"><a href="#来点儿小栗子" class="headerlink" title="来点儿小栗子"></a>来点儿小栗子</h4><p>说小栗子前说下两点：</p>
<p>触发dragover事件时，需要使用preventDefault()方法阻止默认事件，drag事件才能正常触发</p>
<p>dataTransfer中的files属性用到了File API规范的子集，files存放了文件列表，files支持下列属性：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">name:带有扩展名的文件全名</div><div class="line">type：文件的MIME类型</div><div class="line">size：以字节为单位的文件大小</div><div class="line">lastModifiedDate：最后一次修改文件内容的时间戳</div></pre></td></tr></table></figure></p>
<p>下面会用到的FileReader对象<a href="https://developer.mozilla.org/zh-CN/docs/Web/API/FileReader" target="_blank" rel="external">详细请移步</a>：<br>FileReader 对象允许Web应用程序异步读取存储在用户计算机上的文件（或原始数据缓冲区）的内容，使用 File 或 Blob 对象指定要读取的文件或数据。</p>
<p>其中File对象可以是来自用户在一个<input>元素上选择文件后返回的FileList对象,也可以来自拖放操作生成的 DataTransfer对象,还可以是来自在一个HTMLCanvasElement上执行mozGetAsFile()方法后返回结果.</p>
<p>1.简单的节点拖放<br>可将任意节点拖放到其他元素上，并插入到目标元素的前面<br>拖放前后：<br><img src="http://opif0c56u.bkt.clouddn.com/20170725drag02.gif" alt="拖放节点效果"></p>
<p>主要代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">/*目标对象上触发的dragove事件*/</div><div class="line">   drag.addEventListener(&apos;dragover&apos;, function (e) &#123;</div><div class="line">       e.preventDefault(); //阻止默认动作</div><div class="line">   &#125;)</div><div class="line"></div><div class="line">   /*源对象释放，目标对象上触发的事件*/</div><div class="line">   drag.addEventListener(&apos;drop&apos;, function (e) &#123;</div><div class="line">       ele.classList.remove(&apos;draging&apos;);</div><div class="line">       if (e.target.nodeName === &apos;LI&apos;) &#123;</div><div class="line">           e.target.parentNode.insertBefore(ele, e.target); //将源对象元素插入到目标元素前面</div><div class="line">       &#125;</div><div class="line">   &#125;)</div></pre></td></tr></table></figure></p>
<p>2.节点清除<br>可将龙猫丢进垃圾桶，即清除img元素节点<br>丢龙猫前后：<br><img src="http://opif0c56u.bkt.clouddn.com/20170725drag03.gif" alt="丢龙猫前后"><br>主要代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line">&lt;h3&gt;拖动龙猫到垃圾桶后从DOM树中删除子元素&lt;/h3&gt;</div><div class="line">      &lt;img id=&quot;bin&quot; src=&quot;./img/default.png&quot;&gt;</div><div class="line">      &lt;hr/&gt;</div><div class="line">      &lt;img id=&quot;item1&quot; class=&quot;imgs&quot; src=&quot;./img/01.jpeg&quot;&gt;</div><div class="line">      &lt;img id=&quot;item2&quot; class=&quot;imgs&quot; src=&quot;./img/02.jpg&quot;&gt;</div><div class="line">      &lt;img id=&quot;item3&quot; class=&quot;imgs&quot; src=&quot;./img/03.jpeg&quot;&gt;</div><div class="line"></div><div class="line">      &lt;script&gt;</div><div class="line"></div><div class="line">        //为源对象添加事件监听 —— 记录拖动了哪一个源对象</div><div class="line">        var imgs = document.querySelectorAll(&apos;.imgs&apos;);</div><div class="line">        var target = document.querySelector(&apos;#bin&apos;);</div><div class="line"></div><div class="line">        for(var i=0; i&lt;imgs.length; i++)&#123;</div><div class="line">          var pic = imgs[i];</div><div class="line">          pic.ondragstart = function(e)&#123; //开始拖动源对象</div><div class="line">            e.dataTransfer.setData(&apos;imgID&apos;,this.id);//保存被拖拽源的id</div><div class="line">          &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        //为目标对象添加事件监听 —— 删除拖动的源对象</div><div class="line">        target.ondragover= function(e)&#123;</div><div class="line">          e.preventDefault();  //阻止默认行为</div><div class="line">        &#125;</div><div class="line">        target.ondrop= function(e)&#123; //源对象松手释放在了目标对象中</div><div class="line">          //删除被拖动的源对象</div><div class="line">          var id = e.dataTransfer.getData(&apos;imgID&apos;);</div><div class="line">          var p = document.getElementById(id);</div><div class="line">          p.parentNode.removeChild(p);  //从父元素中删除子节点</div><div class="line">        &#125;</div><div class="line"></div><div class="line">      &lt;/script&gt;</div></pre></td></tr></table></figure></p>
<p>3.将本地图片拖放到页面中指定区域</p>
<p>可将你的美图拖到网页中显示</p>
<p>爆照前后效果：<br><img src="http://opif0c56u.bkt.clouddn.com/20170725drag01.gif" alt="爆照前后"></p>
<p>主要代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">var content = document.querySelector(&apos;#content&apos;);</div><div class="line"></div><div class="line">    document.addEventListener(&apos;dragover&apos;,function(e)&#123;</div><div class="line">        e.preventDefault(); //阻止document的默认事件</div><div class="line">    &#125;);</div><div class="line"></div><div class="line">    document.addEventListener(&apos;drop&apos;,function(e)&#123;</div><div class="line">        e.preventDefault(); //阻止document的默认事件(阻止照片在新窗口中打开)</div><div class="line">    &#125;);</div><div class="line"></div><div class="line">    content.addEventListener(&apos;dragover&apos;,function(e)&#123;</div><div class="line">        e.preventDefault();</div><div class="line">    &#125;)</div><div class="line"></div><div class="line">    content.addEventListener(&apos;drop&apos;,function(e)&#123;</div><div class="line">        var imgFs = e.dataTransfer.files[0];  //files存放了文件列表</div><div class="line">        //console.log(imgFs);</div><div class="line">        var fs = new FileReader();  //创建一个FileReader对象</div><div class="line">        fs.readAsDataURL(imgFs);</div><div class="line">        /*图片资源加载完成之后显示在content中*/</div><div class="line">        fs.onload = function()&#123;</div><div class="line">            var img = new Image();</div><div class="line">            img.src = fs.result;</div><div class="line">            content.appendChild(img);</div><div class="line">        &#125;</div><div class="line">    &#125;)</div></pre></td></tr></table></figure></p>
<h4 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h4><p>对今天学习的知识点做个记录，欢迎大佬们指正~</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://opfk7lrr2.bkt.clouddn.com/DSC00494.JPG?imageView/2/w/800/q/90&quot; alt=&quot;漫山遍野&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;head
    
    </summary>
    
      <category term="Web开发" scheme="http://visugar.com/categories/Web%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="拖放API" scheme="http://visugar.com/tags/%E6%8B%96%E6%94%BEAPI/"/>
    
      <category term="drag" scheme="http://visugar.com/tags/drag/"/>
    
      <category term="drop" scheme="http://visugar.com/tags/drop/"/>
    
  </entry>
  
  <entry>
    <title>JS中client/offset/scroll等的宽高解析</title>
    <link href="http://visugar.com/2017/07/25/20170725ClienOffsetScroll/"/>
    <id>http://visugar.com/2017/07/25/20170725ClienOffsetScroll/</id>
    <published>2017-07-25T11:28:30.000Z</published>
    <updated>2017-07-27T12:51:19.236Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://upload-images.jianshu.io/upload_images/1727565-d51672eab4d06697.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="眼花缭乱"></p>
<h2 id="window相关宽高属性"><a href="#window相关宽高属性" class="headerlink" title="window相关宽高属性"></a>window相关宽高属性</h2><h4 id="1-window-outerHeight-窗口的外层的高度-window-outerWidth-窗口的外层的宽度"><a href="#1-window-outerHeight-窗口的外层的高度-window-outerWidth-窗口的外层的宽度" class="headerlink" title="1. window.outerHeight (窗口的外层的高度) / window.outerWidth (窗口的外层的宽度)"></a>1. <strong>window.outerHeight</strong> (窗口的外层的高度) / <strong>window.outerWidth</strong> (窗口的外层的宽度)</h4><ul>
<li>window.outerHeight获取整个浏览器窗口的高度（单位：像素），包括侧边栏（如果存在）、窗口镶边（window chrome）和窗口调正边框。包含调试窗及浏览器边框</li>
<li>window.outerWidth表示整个浏览器窗口的宽度，包括侧边栏（如果存在）、窗口镶边（window chrome）和调正窗口大小的边框。包含调试窗及浏览器边框<br><img src="http://upload-images.jianshu.io/upload_images/1727565-09555815592f0bb7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="window的相关属性"></li>
</ul>
<p>参考链接：<br><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Window/outerHeight" target="_blank" rel="external">window.outerHeight -MDN</a><br><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/window/outerWidth" target="_blank" rel="external">window.outerWidth-MDN</a></p>
<h4 id="2-window-innerHeight-浏览器窗口的视口的高度-和-window-innerWidth"><a href="#2-window-innerHeight-浏览器窗口的视口的高度-和-window-innerWidth" class="headerlink" title="2. window.innerHeight (浏览器窗口的视口的高度)和 window.innerWidth"></a>2. <strong>window.innerHeight</strong> (浏览器窗口的视口的高度)和 <strong>window.innerWidth</strong></h4><ul>
<li>window.innerHeight浏览器窗口的视口（viewport）高度（以像素为单位），如果存在水平滚动条，则包括它。不包含调试窗及浏览器边框</li>
<li>window.innerWidth浏览器视口（viewport）宽度（单位：像素），如果存在垂直滚动条则包括它。不包含调试窗及浏览器边框</li>
</ul>
<p>参考链接：<br><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/window/innerHeight" target="_blank" rel="external">window.innerHeight - MDN</a><br><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/window/innerWidth" target="_blank" rel="external">window.innerWidth - MDN</a></p>
<h4 id="3-window-screen-width和window-screen-height"><a href="#3-window-screen-width和window-screen-height" class="headerlink" title="3. window.screen.width和window.screen.height"></a>3. <strong>window.screen.width</strong>和<strong>window.screen.height</strong></h4><p>注：在获取值时可不加window.前缀</p>
<ul>
<li>window.screen.width声明了显示当前浏览器的<code>屏幕的宽度</code>，以像素计</li>
<li>window.screen.height声明了显示当前浏览器的<code>屏幕的高度</code>，以像素计<br><img src="http://upload-images.jianshu.io/upload_images/1727565-4e1521faf20a88e0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="window.screen"></li>
</ul>
<p>参考链接：<br><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Window/screen" target="_blank" rel="external">window.screen - MDN</a><br><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Window/screen" target="_blank" rel="external">window.screen - MDN</a></p>
<h4 id="4-window-screen-availHeight和window-screen-availWidth"><a href="#4-window-screen-availHeight和window-screen-availWidth" class="headerlink" title="4. window.screen.availHeight和window.screen.availWidth"></a>4. <strong>window.screen.availHeight</strong>和<strong>window.screen.availWidth</strong></h4><ul>
<li>window.screen.availHeight声明了显示浏览器的<code>屏幕的可用高度</code>，以像素计。除去我们底部任务栏外的屏幕高度</li>
<li>window.screen.availWidth声明了显示浏览器的<code>屏幕的可用宽度</code>，以像素计</li>
</ul>
<p>参考链接：<br><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Window/screen" target="_blank" rel="external">window.screen - MDN</a><br><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Window/screen" target="_blank" rel="external">window.screen - MDN</a></p>
<h4 id="5-window-screenTop和window-screenLeft"><a href="#5-window-screenTop和window-screenLeft" class="headerlink" title="5. window.screenTop和window.screenLeft"></a>5. <strong>window.screenTop</strong>和<strong>window.screenLeft</strong></h4><ul>
<li>功能： 返回窗口的左上角在屏幕上的x坐标。该属性为只读属性。语法： window.screenLeft。注：在Firefox等浏览器中使用的是screenX属性。</li>
<li>返回窗口的左上角在屏幕上的y坐标。该属性为只读属性。 语法： window.screenTop。注：在Firefox等浏览器中使用的是screenY属性。<br><img src="http://upload-images.jianshu.io/upload_images/1727565-0d26e615e78a1d47.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="window.screenTop/left"></li>
</ul>
<p>参考链接：<br><a href="http://blog.csdn.net/fengyun111999/article/details/5392505" target="_blank" rel="external">window.screenTop</a><br><a href="http://blog.csdn.net/fengyun111999/article/details/5392505" target="_blank" rel="external">window.screenLeft</a></p>
<h2 id="document下面的相关属性（offset-client-scroll）"><a href="#document下面的相关属性（offset-client-scroll）" class="headerlink" title="document下面的相关属性（offset/client/scroll）"></a>document下面的相关属性（offset/client/scroll）</h2><h3 id="与client相关属性"><a href="#与client相关属性" class="headerlink" title="与client相关属性"></a>与client相关属性</h3><h4 id="6-document-body-clientWidth或element-clientWidth"><a href="#6-document-body-clientWidth或element-clientWidth" class="headerlink" title="6. document.body.clientWidth或element.clientWidth"></a>6. <strong>document.body.clientWidth</strong>或<strong>element.clientWidth</strong></h4><ul>
<li>表示元素的内部宽度，以像素计。该属性包括内边距，但不包括垂直滚动条（如果有的话）、边框和外边距。</li>
<li>该属性值会被四舍五入为一个整数。如果你需要一个小数值，可使用 element.getBoundingClientRect()。</li>
<li>语法：var intElemClientWidth = element.clientWidth;<br><img src="http://upload-images.jianshu.io/upload_images/1727565-b9c85298f4d69745.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="document.body.clientWH"></li>
</ul>
<p>参考链接：<br><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Element/clientWidth" target="_blank" rel="external">Element.clientWidth - MDN</a></p>
<h4 id="7-document-body-clientHeight或element-clientHeight"><a href="#7-document-body-clientHeight或element-clientHeight" class="headerlink" title="7. document.body.clientHeight或element.clientHeight"></a>7. <strong>document.body.clientHeight</strong>或<strong>element.clientHeight</strong></h4><p>返回元素内部的高度(单位像素)，包含内边距，但不包括水平滚动条、边框和外边距。</p>
<p>参考链接：<br><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Element/clientHeight" target="_blank" rel="external">element.clientHeight - MDN</a></p>
<h4 id="8-document-body-clientLeft或element-clientLeft"><a href="#8-document-body-clientLeft或element-clientLeft" class="headerlink" title="8. document.body.clientLeft或element.clientLeft"></a>8. <strong>document.body.clientLeft</strong>或<strong>element.clientLeft</strong></h4><p>表示一个元素的左边框的宽度，以像素表示。如果元素的文本方向是从右向左（RTL, right-to-left），并且由于内容溢出导致左边出现了一个垂直滚动条，则该属性包括滚动条的宽度。<br><img src="http://upload-images.jianshu.io/upload_images/1727565-0aa014faec459e55.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="element.clientLT"></p>
<p>参考链接：<br><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Element/clientLeft" target="_blank" rel="external">Element.clientLeft - MDN</a></p>
<h4 id="9-document-body-clientTop或element-clientTop"><a href="#9-document-body-clientTop或element-clientTop" class="headerlink" title="9. document.body.clientTop或element.clientTop"></a>9. <strong>document.body.clientTop</strong>或<strong>element.clientTop</strong></h4><p>一个元素顶部边框的宽度（以像素表示）。不包括顶部外边距或内边距。</p>
<p>参考链接：<br><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Element/clientTop" target="_blank" rel="external">Element.clientTop</a></p>
<h3 id="与offset相关属性"><a href="#与offset相关属性" class="headerlink" title="与offset相关属性"></a>与offset相关属性</h3><p>这一对属性指的是元素的border+padding+content的宽度和高度</p>
<h4 id="10-document-body-offsetWidth或element-offsetWidth"><a href="#10-document-body-offsetWidth或element-offsetWidth" class="headerlink" title="10. document.body.offsetWidth或element.offsetWidth"></a>10. <strong>document.body.offsetWidth</strong>或<strong>element.offsetWidth</strong></h4><p>border/padding/width三者的总宽度<br><img src="http://upload-images.jianshu.io/upload_images/1727565-a44eb7d8cc51e523.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="offsetWH"></p>
<p>参考链接：<br><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/HTMLElement/offsetWidth" target="_blank" rel="external">HTMLElement.offsetWidth</a></p>
<h4 id="11-document-body-offsetHeight或element-offsetHeight"><a href="#11-document-body-offsetHeight或element-offsetHeight" class="headerlink" title="11. document.body.offsetHeight或element.offsetHeight"></a>11. <strong>document.body.offsetHeight</strong>或<strong>element.offsetHeight</strong></h4><p>border/padding/width三者的总高度，且是一个整数。</p>
<p>参考链接：<br><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/HTMLElement/offsetHeight" target="_blank" rel="external">HTMLElement.offsetHeight</a></p>
<h4 id="12-HTMLElement-offsetLeft和HTMLElement-offsetTop"><a href="#12-HTMLElement-offsetLeft和HTMLElement-offsetTop" class="headerlink" title="12. HTMLElement.offsetLeft和HTMLElement.offsetTop"></a>12. <strong>HTMLElement.offsetLeft</strong>和<strong>HTMLElement.offsetTop</strong></h4><p>这两个属性是基于offsetParent的</p>
<ul>
<li>如果当前元素的父级元素没有进行CSS定位（position为absolute或relative）,offsetParent为body.</li>
<li>假如当前元素的父级元素中有CSS定位，offsetParent取最近的那个父级元素。</li>
<li>offsetLeft返回当前元素左上角相对于  HTMLElement.offsetParent 节点的左边界偏移的像素值。</li>
<li>offsetTop返回当前元素相对于其 offsetParent 元素的顶部的距离。</li>
</ul>
<p>在IE6/7中：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">offsetLeft=(offsetParent的padding-left)+(当前元素的margin-left)</div></pre></td></tr></table></figure></p>
<p>在IE8/9/10及Chrome中：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">offsetLeft=(offsetParent的margin-left)+(offsetParent的border宽度)+(offsetParent的padding-left)+(当前元素的margin-left)</div></pre></td></tr></table></figure></p>
<p>在FireFox中：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">offsetLeft=(offsetParent的margin-left)+(当前元素的margin-left)+(offsetParent的padding-left)</div></pre></td></tr></table></figure></p>
<p>参考链接：<br><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/HTMLElement/offsetLeft" target="_blank" rel="external">HTMLElement.offsetLeft</a><br><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/HTMLElement/offsetTop" target="_blank" rel="external">HTMLElement.offsetTop</a></p>
<h3 id="与scroll相关属性"><a href="#与scroll相关属性" class="headerlink" title="与scroll相关属性"></a>与scroll相关属性</h3><h4 id="13-document-body-scrollWidth及document-body-scrollHeight"><a href="#13-document-body-scrollWidth及document-body-scrollHeight" class="headerlink" title="13. document.body.scrollWidth及document.body.scrollHeight"></a>13. <strong>document.body.scrollWidth</strong>及<strong>document.body.scrollHeight</strong></h4><p>body与普通element不一样</p>
<p>给定body宽高 &lt; 浏览器窗口时：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">scrollWidth = 浏览器窗口宽度</div><div class="line">scrollHeight = 浏览器窗口高度</div></pre></td></tr></table></figure></p>
<p>给定body宽高大于浏览器窗口，且内容小于给定body宽高时：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">scrollWidth = 给定的宽度 + body所有padding + body所有margin + body所有border</div><div class="line">scrollHeight = 给定的高度 + body所有padding + body所有margin + body所有border</div></pre></td></tr></table></figure></p>
<p>给定body宽高大于浏览器窗口，且内容大于给定窗口时：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">scrollWidth = 内容的宽度 + body所有padding + body所有margin + body所有border</div><div class="line">scrollHeight = 内容的高度 + body所有padding + body所有margin + body所有border</div></pre></td></tr></table></figure></p>
<p>参考链接：<br><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Element/scrollWidth" target="_blank" rel="external">Element.scrollWidth</a></p>
<h4 id="14-element-scrollWidth和element-scrollHeight"><a href="#14-element-scrollWidth和element-scrollHeight" class="headerlink" title="14. element.scrollWidth和element.scrollHeight"></a>14. <strong>element.scrollWidth</strong>和<strong>element.scrollHeight</strong></h4><p>当无滚动条时：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">scrollWidth = clientWidth = 元素宽度 + padding和</div><div class="line">scrollHeight = clientHeight = 元素高度 + padding和</div></pre></td></tr></table></figure></p>
<p>当有滚动条时：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">scrollWidth = 实际内容的宽度 + padding和</div><div class="line">scrollHeight  = 实际内容的高度 + padding和</div></pre></td></tr></table></figure></p>
<h4 id="15-document-body-scrollTop及document-body-scrollLeft"><a href="#15-document-body-scrollTop及document-body-scrollLeft" class="headerlink" title="15. document.body.scrollTop及document.body.scrollLeft"></a>15. <strong>document.body.scrollTop</strong>及<strong>document.body.scrollLeft</strong></h4><ul>
<li>这对属性是可读写（可被重新赋值） 的</li>
<li>指的是当元素其中的内容超出其宽高的时候，元素被卷起来的高和宽度。</li>
<li>对于element元素同样适用</li>
</ul>
<h4 id="16-window-scrollY及window-scrollX"><a href="#16-window-scrollY及window-scrollX" class="headerlink" title="16. window.scrollY及window.scrollX"></a>16. <strong>window.scrollY</strong>及<strong>window.scrollX</strong></h4><p>window.scrollY 文档从顶部开始滚动过的像素值 / window.scrollX 文档从左侧开始滚动的像素值。</p>
<h1 id="event中的五种坐标"><a href="#event中的五种坐标" class="headerlink" title="event中的五种坐标"></a>event中的五种坐标</h1><p>1、<strong>clientX</strong>及<strong>clientY</strong>：相对于浏览器（可视区左上角0,0）的坐标</p>
<p>2、<strong>screenX</strong>和<strong>screenY</strong>：相对于设备屏幕左上角（0,0）的坐标</p>
<p>3、<strong>offsetX</strong>和<strong>offsetY</strong>：相对于事件源左上角（0,0）的坐标</p>
<p>4、<strong>pageX</strong>和<strong>pageY</strong>：相对于整个网页左上角（0,0）的坐标</p>
<h4 id="参考来源："><a href="#参考来源：" class="headerlink" title="参考来源："></a>参考来源：</h4><ul>
<li>视频课程：<a href="http://www.imooc.com/learn/608" target="_blank" rel="external">JS/jQuery宽高的理解和应用</a></li>
<li>博客：<a href="http://duni.sinaapp.com/?p=750" target="_blank" rel="external">JavaScript中的各种宽高属性</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1727565-d51672eab4d06697.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; 
    
    </summary>
    
      <category term="划重点" scheme="http://visugar.com/categories/%E5%88%92%E9%87%8D%E7%82%B9/"/>
    
    
      <category term="前端" scheme="http://visugar.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="width/height" scheme="http://visugar.com/tags/width-height/"/>
    
      <category term="offset/client/scroll" scheme="http://visugar.com/tags/offset-client-scroll/"/>
    
  </entry>
  
  <entry>
    <title>css实现鼠标悬浮字体流光背景模糊效果</title>
    <link href="http://visugar.com/2017/06/26/20170626FontLightBlur/"/>
    <id>http://visugar.com/2017/06/26/20170626FontLightBlur/</id>
    <published>2017-06-26T10:36:31.000Z</published>
    <updated>2017-06-26T10:39:10.235Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://opfk7lrr2.bkt.clouddn.com/DSC00724.JPG?imageView/2/w/600/90" alt="美丽的天空"></p>
<h4 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h4><p>有的时候感觉写点小玩意儿挺开心的，还能实践很多的小知识点，所以这次学着写了个有趣的鼠标悬浮模糊效果，只使用了css额。</p>
<h4 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h4><p><img src="http://opif0c56u.bkt.clouddn.com/20170626bg.gif" alt="看过来"></p>
<p>源码地址<a href="https://github.com/visugar/ife2017/blob/master/04nuomi/task401/index.html" target="_blank" rel="external">→传送门</a></p>
<p>预览地址<a href="https://visugar.github.io/ife2017/04nuomi/task401/index.html" target="_blank" rel="external">→传送门</a></p>
<h4 id="小知识点"><a href="#小知识点" class="headerlink" title="小知识点"></a>小知识点</h4><p><strong>filter: blur(npx);</strong></p>
<p>这个过滤器用来将图片模糊，但是兼容性不太好，n代表模糊度，值越大越模糊。</p>
<p><strong>background-clip: text;</strong></p>
<p><code>background-clip</code>是用于背景图片的裁剪，决定背景从哪里开始显示。当设置为<code>text</code>时，即可将背景设置在字体上。</p>
<p><strong>text-fill-color</strong></p>
<p>这个属性为字体颜色填充，在这里设置成<code>transparent</code>,然后在自己填充一个颜色渐变的字体颜色。</p>
<p><strong>linear-gradient</strong></p>
<p>线性渐变，这里为文字添加一个渐变色，为了实现流光渐变的效果，需要将背景宽度设置为200%，且<code>linear-gradient</code>的0%和100%颜色一样，便于前后衔接上，具体如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">background-image: -webkit-linear-gradient(left, red, yellow 25%, red 50%, yellow 75%, red 100%);</div><div class="line">background-size: 200% 100%;</div></pre></td></tr></table></figure></p>
<p>在设置好背景色之后为字体添加动画，使文字产生流光效果。</p>
<p><strong>鼠标悬浮显示和隐藏</strong><br>现将元素的透明度设为0，当鼠标悬浮时执行渐变透明度变为1。</p>
<p><strong>边框向两边伸展的效果</strong></p>
<p>在实际中我们只能设置边框的宽度，而不能改变边框的长度，所以此处不能直接用border的属性。而是通过追加2个元素，并改变其大小来实现本元素的边框向两边伸展的效果。分别设置这两个元素的上下边框及左右边框。<br>原理图(实现为所设边框，虚线为不设置边宽)：<br><img src="http://opif0c56u.bkt.clouddn.com/20170626yuanli.png" alt="原理图"></p>
<p><strong>追加元素的实现</strong><br>追加元素宽或高为0，当鼠标移动到box上时，宽或高渐变到100%，即可。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">#content:before &#123;</div><div class="line">            content: &quot; &quot;;</div><div class="line">            position: absolute;</div><div class="line">            left: 50%;</div><div class="line">            top: 0;</div><div class="line">            width: 0;</div><div class="line">            height: 100%;</div><div class="line">            border: 3px solid #fff;</div><div class="line">            border-left: none;</div><div class="line">            border-right: none;</div><div class="line">            transition: all 0.8s;</div><div class="line">            box-sizing: border-box;</div><div class="line">        &#125;</div><div class="line">#box:hover #content:before &#123;</div><div class="line">            width: 100%;</div><div class="line">            left: 0;</div><div class="line">        &#125;</div></pre></td></tr></table></figure></p>
<p>左和右边框同理实现。</p>
<h4 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h4><p>以前感觉好多属性用不上，这下用上了好多个，以后继续写写写~</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://opfk7lrr2.bkt.clouddn.com/DSC00724.JPG?imageView/2/w/600/90&quot; alt=&quot;美丽的天空&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;heade
    
    </summary>
    
      <category term="Web开发" scheme="http://visugar.com/categories/Web%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="前端" scheme="http://visugar.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="CSS3" scheme="http://visugar.com/tags/CSS3/"/>
    
  </entry>
  
  <entry>
    <title>原生JS实现省市区（县）三级联动选择</title>
    <link href="http://visugar.com/2017/06/09/20170609ThreeLevel/"/>
    <id>http://visugar.com/2017/06/09/20170609ThreeLevel/</id>
    <published>2017-06-09T12:28:08.000Z</published>
    <updated>2017-07-27T12:31:39.312Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://opfk7lrr2.bkt.clouddn.com/DSC03889.JPG?imageView/2/w/600/q/90" alt="wo e le"></p>
<h4 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h4><p>前段时间写一个关于天气的东西，里面的省市区（县）城市选择让我很头疼，在网上搜索出来大都是借助插件或者第三方库，感觉这样做代码会很重，所以索性就把几种城市选择的方式实现一遍，以备日后的不时之需。这三种方法都是针对pc端的，并且都是使用原生js实现的，连jq都没使用，于是代码有点繁琐额（尴尬）。。。。不过还是让我把原理讲完吧。</p>
<p>源代码地址→<a href="https://github.com/visugar/FrontEnd-examples" target="_blank" rel="external">传送门</a></p>
<p>预览地址→<a href="https://visugar.github.io/FrontEnd-examples/01省市区三级联动/index.html" target="_blank" rel="external">传送门</a></p>
<h4 id="方法一：下拉选择框实现省市区（县）三级联动"><a href="#方法一：下拉选择框实现省市区（县）三级联动" class="headerlink" title="方法一：下拉选择框实现省市区（县）三级联动"></a>方法一：下拉选择框实现省市区（县）三级联动</h4><p>用下拉框实现省市区三级联动是很常见的一种方式，也很方便。这里需要先了解下select的相关属性及其对象属性，请参考<a href="http://visugar.com/2017/06/08/select%E8%A1%A8%E5%8D%95%E5%85%83%E7%B4%A0%E8%AF%A6%E8%A7%A3%E5%8F%8A%E4%B8%8B%E6%8B%89%E5%88%97%E8%A1%A8%E6%A8%A1%E6%8B%9F%E5%AE%9E%E7%8E%B0/">此文</a></p>
<p>先看下最终实现效果图：<br><img src="http://opif0c56u.bkt.clouddn.com/select00.png" alt="select实现三级联动"></p>
<p>思路介绍：</p>
<p>页面加载时，动态获取省份列表并放到下拉菜单的下拉项中：<br><img src="http://opif0c56u.bkt.clouddn.com/select01.png" alt="select-省份显示"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">    /*自动加载省份列表*/</div><div class="line">(function showProv() &#123;</div><div class="line">    btn.disabled = true;</div><div class="line">    var len = provice.length;</div><div class="line">    for (var i = 0; i &lt; len; i++) &#123;</div><div class="line">        var provOpt = document.createElement(&apos;option&apos;);</div><div class="line">        provOpt.innerText = provice[i][&apos;name&apos;];</div><div class="line">        provOpt.value = i;</div><div class="line">        prov.appendChild(provOpt);</div><div class="line">    &#125;</div><div class="line">&#125;)();</div></pre></td></tr></table></figure></p>
<p>当点击省份列表中的某一项，此时触发省份下拉框的<code>onchange事件</code>，在onchange事件中根据前面所选的省份来显示对应城市。这里用到一个select的selectedIndex属性，从而获取刚刚点击的是哪个省份（生成省份列表时添加了value属性值）：<br><img src="http://opif0c56u.bkt.clouddn.com/select02.png" alt="select-省份显示"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">var val = obj.options[obj.selectedIndex].value;  //这里得到的是所选择省份在所有下拉项中为第几项</div></pre></td></tr></table></figure></p>
<p>当点击城市列表中的某一项时，原理同上（此处不赘述）<br><img src="http://opif0c56u.bkt.clouddn.com/select04.png" alt="select-省份显示"><br>选择城市时存在两种情况，如何城市选项下不存在县区，则直接将所选省市显示在输入框，否则依照上诉原理显示县区<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&lt;!--方法是判断县区的length是否为0--&gt;</div><div class="line">var countryLen = provice[current.prov][&quot;city&quot;][val].districtAndCounty.length;</div><div class="line">    if(countryLen == 0)&#123;</div><div class="line">        addrShow.value = provice[current.prov].name + &apos;-&apos; + provice[current.prov][&quot;city&quot;][current.city].name;</div><div class="line">        return;</div><div class="line">    &#125;</div></pre></td></tr></table></figure></p>
<p>最后点击县区后再按确定，则可将所选地点显示在输入框中。</p>
<p>注意:</p>
<ul>
<li>在未选中具体县区时，按钮为不可点状态</li>
<li>具体的实现主要根据城市数据来进行更细的处理。</li>
</ul>
<p>说明：</p>
<ul>
<li>这里使用的省市区数据来源于网络，不能保证真实性及完整性，仅供案例使用</li>
<li>此处使用的数据类型为js数组,格式参考如下（<a href="https://github.com/visugar/FrontEnd-examples/blob/master/01%E7%9C%81%E5%B8%82%E5%8C%BA%E4%B8%89%E7%BA%A7%E8%81%94%E5%8A%A8/city.js" target="_blank" rel="external">完整版</a>）：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line">var provice = [</div><div class="line">    &#123;</div><div class="line">        name: &quot;北京市&quot;,</div><div class="line">        city: [</div><div class="line">            &#123;</div><div class="line">                name: &quot;北京市&quot;,</div><div class="line">                districtAndCounty: [&quot;东城区&quot;, &quot;西城区&quot;, &quot;崇文区&quot;, &quot;宣武区&quot;, &quot;朝阳区&quot;, &quot;丰台区&quot;, &quot;石景山区&quot;, &quot;海淀区&quot;, &quot;门头沟区&quot;, &quot;房山区&quot;, &quot;通州区&quot;, &quot;顺义区&quot;, &quot;昌平区&quot;, &quot;大兴区&quot;, &quot;怀柔区&quot;, &quot;平谷区&quot;, &quot;密云县&quot;, &quot;延庆县&quot;, &quot;延庆镇&quot;]</div><div class="line">            &#125;</div><div class="line">        ]</div><div class="line">    &#125;,</div><div class="line"></div><div class="line">    ......</div><div class="line"></div><div class="line">    &#123;</div><div class="line">        name: &quot;河北省&quot;,</div><div class="line">        city: [</div><div class="line">            &#123;</div><div class="line">                name: &quot;石家庄市&quot;,</div><div class="line">                districtAndCounty: [&quot;长安区&quot;, &quot;桥东区&quot;, &quot;桥西区&quot;, &quot;新华区&quot;, &quot;裕华区&quot;, &quot;井陉矿区&quot;, &quot;辛集市&quot;, &quot;藁城市&quot;, &quot;晋州市&quot;, &quot;新乐市&quot;, &quot;鹿泉市&quot;, &quot;井陉县&quot;, &quot;微水镇&quot;, &quot;正定县&quot;, &quot;正定镇&quot;, &quot;栾城县&quot;, &quot;栾城镇&quot;, &quot;行唐县&quot;, &quot;龙州镇&quot;, &quot;灵寿县&quot;, &quot;灵寿镇&quot;, &quot;高邑县&quot;, &quot;高邑镇&quot;, &quot;深泽县&quot;, &quot;深泽镇&quot;, &quot;赞皇县&quot;, &quot;赞皇镇&quot;, &quot;无极县&quot;, &quot;无极镇&quot;, &quot;平山县&quot;, &quot;平山镇&quot;, &quot;元氏县&quot;, &quot;槐阳镇&quot;, &quot;赵县&quot;, &quot;赵州镇&quot;]</div><div class="line">            &#125;,</div><div class="line"></div><div class="line">            .......</div><div class="line"></div><div class="line">            &#123;</div><div class="line">                name: &quot;邯郸市&quot;,</div><div class="line">                districtAndCounty: [&quot;丛台区&quot;, &quot;邯山区&quot;, &quot;复兴区&quot;, &quot;峰峰矿区&quot;, &quot;武安市&quot;, &quot;邯郸县&quot;, &quot;南堡乡东小屯村&quot;, &quot;临漳县&quot;, &quot;临漳镇&quot;, &quot;成安县&quot;, &quot;成安镇&quot;, &quot;大名县&quot;, &quot;大名镇&quot;, &quot;涉县&quot;, &quot;涉城镇&quot;, &quot;磁县&quot;, &quot;磁州镇&quot;, &quot;肥乡县&quot;, &quot;肥乡镇&quot;, &quot;永年县&quot;, &quot;临洺关镇&quot;, &quot;邱县&quot;, &quot;新马头镇&quot;, &quot;鸡泽县&quot;, &quot;鸡泽镇&quot;, &quot;广平县&quot;, &quot;广平镇&quot;, &quot;馆陶县&quot;, &quot;馆陶镇&quot;, &quot;魏县&quot;, &quot;魏城镇&quot;, &quot;曲周县&quot;, &quot;曲周镇&quot;]</div><div class="line">            &#125;</div><div class="line">        ]</div><div class="line">    &#125;</div><div class="line">]</div></pre></td></tr></table></figure>
<h4 id="方法二：按级选中省市县-区"><a href="#方法二：按级选中省市县-区" class="headerlink" title="方法二：按级选中省市县/区"></a>方法二：按级选中省市县/区</h4><ol>
<li>这种方式比上面的下拉框更好看点，操作也更方便点，不过大概的逻辑有点类似。所用省市区数据跟上面的一致。</li>
<li>先看看这种方式的效果图：<br><img src="http://opif0c56u.bkt.clouddn.com/grad00.png" alt="按级选中省市县/区"></li>
<li>在页面加载时同样先显示出所有的省份列表（方法类似）<br><img src="http://opif0c56u.bkt.clouddn.com/grad01.png" alt="按级选中省市县/区"></li>
<li>点击具体省份时，将省份列表替换成对应的城市列表，点击具体城市时显示对应县区，实现如下：<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">addrWrap.onclick = function (e) &#123;     //将点击事件委托给列表的父元素</div><div class="line">    var n;</div><div class="line">    var e = e || window.event;</div><div class="line">    var target = e.target || e.srcElement;</div><div class="line">    if (target &amp;&amp; target.nodeName == &apos;LI&apos;) &#123;</div><div class="line">        /*先判断当前显示区域显示的是省市区的那部分*/</div><div class="line">        for (var z = 0; z &lt; 3; z++) &#123;</div><div class="line">            if (titleWrap[z].className == &apos;titleSel&apos;)</div><div class="line">                n = z;</div><div class="line">        &#125;</div><div class="line">        /*显示的处理函数*/</div><div class="line">        switch (n) &#123;</div><div class="line">            case 0:</div><div class="line">                showCity2(target.index);   //点击的是省份中列表的某一项，接下来则显示城市列表</div><div class="line">                break;</div><div class="line">            case 1:</div><div class="line">                showCountry2(target.index);  //点击的是城市列表中的某一项，接下来则显示县区列表</div><div class="line">                break;</div><div class="line">            case 2:</div><div class="line">                selectCountry(target.index);  //点击具体的某个县区，则将该县区选择</div><div class="line">                break;</div><div class="line">            default:</div><div class="line">                showProv2();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
</li>
</ol>
<p><img src="http://opif0c56u.bkt.clouddn.com/grad02.png" alt="按级选中省市县/区"><br><img src="http://opif0c56u.bkt.clouddn.com/grad03.png" alt="按级选中省市县/区"><br>5.上面点击的每一步中将选中项的索引及值保存在一个对象中，以便最后点击确定按钮将选择的省市区显示在输入框中。<br>6.当选择的城市不存在县区时处理跟第一种方式一致。<br>7.当点击分类时，显示对应的内容，同时将保存的对象的值进行处理：<br><img src="http://opif0c56u.bkt.clouddn.com/grad04.png" alt="点击不同分类"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">//将事件委托给父元素,根据点击的分类进行处理（html的设置好li的value值）</div><div class="line">if (target.value == &apos;0&apos;) &#123;</div><div class="line">    showProv2();</div><div class="line">&#125; else if (target.value == &apos;1&apos;) &#123;</div><div class="line">    showCity2(current2.prov);</div><div class="line">&#125; else &#123;</div><div class="line">    showCountry2(current2.city);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>8.OK</p>
<h4 id="方法三：按字母顺序选中城市"><a href="#方法三：按字母顺序选中城市" class="headerlink" title="方法三：按字母顺序选中城市"></a>方法三：按字母顺序选中城市</h4><ol>
<li>直接按字母的顺序选中城市这种方式比前两种更简单粗暴也较为简单，代码量也较少。</li>
<li>先看看这种方式的效果图：<br><img src="http://opif0c56u.bkt.clouddn.com/city02.png" alt="按字母顺序选中城市"></li>
<li>页面加载时先显示热门城市<br><img src="http://opif0c56u.bkt.clouddn.com/city01.png" alt="按字母顺序选中城市"></li>
<li>点击不同字母集，显示对应的城市列表<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">switch (index) &#123;</div><div class="line">            case 0:    //0为热门项</div><div class="line">                showHotCity();</div><div class="line">                break;</div><div class="line">            case 6:    //6为最后一栏，字母集个数为2</div><div class="line">                showCitys(index, 2);</div><div class="line">                break;</div><div class="line">            default:   //其余索引，字母集个数都为4</div><div class="line">                showCitys(index, 4);</div><div class="line">        &#125;</div></pre></td></tr></table></figure>
</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">function showCitys(index, m) &#123;</div><div class="line">    //通过传入的参数截取城市数据的一部分为当前要显示的城市列表</div><div class="line">    var currentAll = cityAll.slice(4 * index - 3, 4 * index + m - 3);</div><div class="line"></div><div class="line">    .....</div><div class="line"></div><div class="line">    //将动态生成的列表项放到显示区域</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>5.点击具体某一个城市时，将其显示在输入框中。<br><img src="http://opif0c56u.bkt.clouddn.com/city00.png" alt="按字母顺序选中城市"><br>6.这种方式的城市数据跟前两种不同，来源于网上，不能保证真实性及完整性，仅供案例使用，数据格式如下（<a href="https://github.com/visugar/FrontEnd-examples/blob/master/01%E7%9C%81%E5%B8%82%E5%8C%BA%E4%B8%89%E7%BA%A7%E8%81%94%E5%8A%A8/city02.js" target="_blank" rel="external">完整版</a>）：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">var cityAll = [</div><div class="line">    &#123;</div><div class="line">        name: &quot;hot&quot;,</div><div class="line">        citys: [&quot;北京&quot;, &quot;上海&quot;, &quot;广州&quot;, &quot;深圳&quot;, &quot;杭州&quot;, &quot;南京&quot;, &quot;成都&quot;, &quot;重庆&quot;, &quot;武汉&quot;, &quot;长沙&quot;, &quot;昆明&quot;]</div><div class="line">    &#125;,</div><div class="line">    &#123;</div><div class="line">        name: &quot;A&quot;,</div><div class="line">        citys: [&quot;阿坝&quot;, &quot;阿拉善&quot;, &quot;阿里&quot;, &quot;安康&quot;, &quot;安庆&quot;, &quot;鞍山&quot;, &quot;安顺&quot;, &quot;安阳&quot;, &quot;澳门&quot;]</div><div class="line">    &#125;,</div><div class="line"></div><div class="line">    ......</div><div class="line"></div><div class="line"></div><div class="line">    &#123;</div><div class="line">        name: &quot;Z&quot;,</div><div class="line">        citys: [&quot;杂多县&quot;, &quot;赞皇县&quot;, &quot;枣强县&quot;, &quot;枣阳市&quot;, &quot;枣庄&quot;,.......,资阳&quot;]</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>7.完美~</p>
<h4 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h4><ol>
<li>详细代码看上面给出了链接，有注释的额（firefox和chrome可正常显示）~</li>
<li>这几种实现方式为一己之见，欢迎大佬们指点，如有更好的可以告诉我，我来完善完善~</li>
<li>有人能告诉我怎么做gif图么？</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://opfk7lrr2.bkt.clouddn.com/DSC03889.JPG?imageView/2/w/600/q/90&quot; alt=&quot;wo e le&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;h
    
    </summary>
    
      <category term="Web开发" scheme="http://visugar.com/categories/Web%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="前端" scheme="http://visugar.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="select" scheme="http://visugar.com/tags/select/"/>
    
      <category term="省市区三级联动" scheme="http://visugar.com/tags/%E7%9C%81%E5%B8%82%E5%8C%BA%E4%B8%89%E7%BA%A7%E8%81%94%E5%8A%A8/"/>
    
      <category term="JS" scheme="http://visugar.com/tags/JS/"/>
    
  </entry>
  
  <entry>
    <title>select表单元素详解及下拉列表模拟实现</title>
    <link href="http://visugar.com/2017/06/08/20170608SelectList/"/>
    <id>http://visugar.com/2017/06/08/20170608SelectList/</id>
    <published>2017-06-08T11:45:10.000Z</published>
    <updated>2017-07-27T12:26:42.938Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://opfk7lrr2.bkt.clouddn.com/DSC00636.JPG?imageView/2/w/600/q/90" alt="图书馆前"></p>
<h3 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h3><p><strong>select</strong> 是HTML表单元素中很常用的一个，其中很重要的几个属性常被忽略，但这几个属性却能帮助我们完成很多的功能，当然，select下拉列表默认样式很不友好，所以更多的时候可以自己模拟实现一个同样功能的下拉菜单。下文先介绍select标签的一些属性及使用，后面再模拟一个相同效果的下拉菜单。</p>
<p>介绍之前先看下demo预览图：</p>
<p>1.firefox下select的默认样式：</p>
<p><img src="http://opif0c56u.bkt.clouddn.com/firefox-default.png" alt="firefox-default"></p>
<p>2.chrome下select的默认样式：</p>
<p><img src="http://opif0c56u.bkt.clouddn.com/chrome-default.png" alt="chrome-default"></p>
<p>3.firefox下自定义select下拉列表的icon效果：</p>
<p><img src="http://opif0c56u.bkt.clouddn.com/firefox-self.png" alt="firefox-self"></p>
<p>4.chrome下自定义select下拉列表的icon效果：</p>
<p><img src="http://opif0c56u.bkt.clouddn.com/chrome-self.png" alt="chrome-self"></p>
<p>5.原生js模拟select下拉列表的实现效果(chrome及firefox效果一致)：</p>
<p><img src="http://opif0c56u.bkt.clouddn.com/chrome-moni.png" alt="模拟select"></p>
<p>源代码地址→<a href="https://github.com/visugar/FrontEnd-examples" target="_blank" rel="external">传送门</a></p>
<p>预览地址→<a href="https://visugar.github.io/FrontEnd-examples/02模拟select下拉列表/index.html" target="_blank" rel="external">传送门</a></p>
<h4 id="1-select表单元素及相关属性（我只是大自然的搬运工）"><a href="#1-select表单元素及相关属性（我只是大自然的搬运工）" class="headerlink" title="1. select表单元素及相关属性（我只是大自然的搬运工）"></a>1. select表单元素及相关属性（我只是大自然的搬运工）</h4><p><strong>提示</strong><br>select 元素是一种表单控件，可用于在表单中接受用户输入<br><strong>支持的全局属性</strong></p>
<ul>
<li>仅挑几个属性</li>
<li>autofocus(其值为autofocus): 规定在页面加载后文本区域自动获得焦点。</li>
<li>disabled(值为disabled): 规定禁用该下拉列表。</li>
<li>form(值为form_id): 规定文本区域所属的一个或多个表单。</li>
<li>multiple(值为multiple): 规定可选择多个选项。</li>
</ul>
<p><strong>支持的事件属性</strong></p>
<ul>
<li>挑一个最常用到的额</li>
<li>onchange：当select改变选择时调用的事件句柄。(可以实现三级联动的效果)</li>
</ul>
<p><strong>selected对象的属性及方法</strong></p>
<ul>
<li>挑几个重要的额</li>
<li>options[]：返回包含下拉列表中的所有选项的一个数组。</li>
<li>length：返回下拉列表中的选项数目。</li>
<li>selectIndex：设置或返回下拉列表中被选项目的索引号。</li>
<li>add(): 向下拉列表添加一个选项。</li>
<li>remove(): 从下拉列表中删除一个选项。</li>
</ul>
<p><strong>option标签</strong></p>
<ul>
<li>option元素定义下拉列表中的一个选项（一个条目）。</li>
<li>disabled(值为disabled)：规定此选项应在首次加载时被禁用。</li>
<li>label(值为text)：定义当使用 <optgroup> 时所使用的标注。</optgroup></li>
<li>selected)(值为selected)：规定选项（在首次显示在列表中时）表现为选中状态。</li>
<li>value(text): 定义送往服务器的选项值。</li>
</ul>
<p><strong>option对象的属性</strong></p>
<ul>
<li>几个比较重要的额</li>
<li>defaultSelected：返回 selected 属性的默认值。</li>
<li>disabled:设置或返回选项是否应被禁用。</li>
<li>index：返回下拉列表中某个选项的索引位置。</li>
<li>selected：设置或返回 selected 属性的值。</li>
</ul>
<p><strong>注意</strong>：</p>
<p>select本身的样式可用css设置，但对option设置的样式在chrome中不起作用，在Firefox可行</p>
<p>w3c官网的详细解释 → <a href="http://www.w3school.com.cn/tags/tag_select.asp" target="_blank" rel="external">传送门</a></p>
<h4 id="2-HTML标签自定义属性（纯属题外话）"><a href="#2-HTML标签自定义属性（纯属题外话）" class="headerlink" title="2. HTML标签自定义属性（纯属题外话）"></a>2. HTML标签自定义属性（纯属题外话）</h4><p><strong>HTML5 data-*自定义属性</strong>：添加data-前缀使属性变成自定义属性，最大的好处是我们可以把所有自定义属性在dataset对象中统一管理。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&lt;div id=&quot;student&quot; data-weight=&quot;98&quot;&gt;点击显示&lt;/div&gt;</div><div class="line"></div><div class="line">var student = document.getElementById(&quot;student&quot;);</div><div class="line">student.dataset.cm = &apos;168&apos;; //设置自定义属性</div><div class="line">var stuWeight = studdent.dataset.weight; //获取自定义属性值</div><div class="line"></div><div class="line">student.dataset.birthDate = &apos;19980612&apos;;  //连字符的自定义属性 (例如设置data-birth-date)</div></pre></td></tr></table></figure>
<h4 id="3-自定义下拉列表的图标"><a href="#3-自定义下拉列表的图标" class="headerlink" title="3. 自定义下拉列表的图标"></a>3. 自定义下拉列表的图标</h4><p>select默认样式中的下拉按钮不是很好看，我们可以自己用替张图片替换掉。（效果看文章上面的链接，请忽略我的丑丑的图标额）</p>
<p>1.对select自定义图标时需要设置apperance属性为<code>none</code>(隐藏原有小三角)，并做兼容</p>
<p>2.加上将要替换的自定义图标即可</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">select&#123;</div><div class="line">    -webkit-appearance: none; /*隐藏默认样式中的小三角*/</div><div class="line">    -moz-appearance: none;</div><div class="line">    background: url(&apos;http://opif0c56u.bkt.clouddn.com/select.gif&apos;) no-repeat scroll right 8px center;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>3.可对option添加背景色</p>
<p>4.在firefox中可使用伪元素<code>:before</code>对option添加序号（此处插播一个css添加序号的方法）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">select&#123;</div><div class="line">    counter-reset: item; //类似于声明计数变量（声明在父元素中）</div><div class="line">&#125;</div><div class="line">select option:before &#123;</div><div class="line">    counter-increment: item;   //要使用的计数名</div><div class="line">    content: counter(item) &quot; . &quot;; //追加前置序号,chrome对option的设置中不起作用</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="4-js模拟select下拉菜单-重头戏"><a href="#4-js模拟select下拉菜单-重头戏" class="headerlink" title="4. js模拟select下拉菜单(重头戏)"></a>4. js模拟select下拉菜单(重头戏)</h4><p>许多时候会觉得select表单特别的不好用，不能自己添加很多的样式，小伙伴们还是自己模拟一个吧！</p>
<p>1.html代码结构：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">&lt;div id=&quot;sel-wrap&quot;&gt;</div><div class="line">    &lt;div id=&quot;sel-show&quot;&gt;=请选择=&lt;/div&gt;</div><div class="line">    &lt;ul id=&quot;sel-option&quot;&gt;</div><div class="line">        &lt;li class=&quot;item&quot;&gt;早上吃包子&lt;/li&gt;</div><div class="line">        &lt;li class=&quot;item&quot;&gt;中午吃米饭&lt;/li&gt;</div><div class="line">        &lt;li class=&quot;item&quot;&gt;晚上吃面条&lt;/li&gt;</div><div class="line">        &lt;li class=&quot;item&quot;&gt;宵夜吃烧烤&lt;/li&gt;</div><div class="line">        &lt;li class=&quot;item&quot;&gt;睡前喝牛奶&lt;/li&gt;</div><div class="line">    &lt;/ul&gt;</div><div class="line">&lt;/div&gt;</div></pre></td></tr></table></figure>
<p>2.下拉按钮的图标跟上面自定义的方式一致（这里不再说了）。</p>
<p>3.hover到li上时，利用伪元素<code>:before</code>追加一个对勾。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">#sel-option li:hover:before &#123;</div><div class="line">    content: &apos;\2714&apos; &apos; &apos;;  //此处为对勾+空格</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<p>4.下面说下实现原理：</p>
<p>下拉菜单的选项为ul中的内容，需要先隐藏起来，且显示的时候是浮在其他内容的上面，此处需要使用position来实现。（即脱离文档流）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">#sel-wrap&#123;</div><div class="line">    position: relative;  //设置父元素</div><div class="line">&#125;</div><div class="line">#sel-option&#123;</div><div class="line">    position: absolute;  //设置下拉列项的包裹层</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<ul>
<li>点击下拉框时显示下拉列表项</li>
<li>点击列表项时将选中值传递给下拉框并显示，同时下拉项收起（此处的点击事件绑定在父元素中）</li>
<li>当下拉项显示并未选中任何下拉项时，点击下拉框收起下拉项</li>
<li>当下拉项显示并未选中任何下拉项时，点击下拉项以外的任意位置，收起下拉框</li>
<li>最终实现（样式什么的都可以随便改）：</li>
</ul>
<p><img src="http://opif0c56u.bkt.clouddn.com/firefox-moni.png" alt="最终样式"></p>
<h4 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h4><ol>
<li>小花作为菜鸟第一次自己模拟下拉列表的实现，有可能存在代码欠缺，但是为了方便以后使用的时候查询，所以就记录下</li>
<li>欢迎大佬们指点</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://opfk7lrr2.bkt.clouddn.com/DSC00636.JPG?imageView/2/w/600/q/90&quot; alt=&quot;图书馆前&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;head
    
    </summary>
    
      <category term="Web开发" scheme="http://visugar.com/categories/Web%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="前端" scheme="http://visugar.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="css3" scheme="http://visugar.com/tags/css3/"/>
    
      <category term="select" scheme="http://visugar.com/tags/select/"/>
    
  </entry>
  
  <entry>
    <title>预览github项目的html文件新方法</title>
    <link href="http://visugar.com/2017/05/19/20170519PreviewHtml/"/>
    <id>http://visugar.com/2017/05/19/20170519PreviewHtml/</id>
    <published>2017-05-19T04:32:01.000Z</published>
    <updated>2017-07-27T12:21:35.055Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://opfk7lrr2.bkt.clouddn.com/DSC03498.JPG?imageView/2/w/600/q/90" alt="这是一个很好看的地方"></p>
<h4 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h4><p>关于如何在线预览github中的html文件，其实这是一个很多人知道的东西，但是查资料的时候呢总是找不到正确的答案，并且一开始我也是踩了坑的。</p>
<h4 id="踩坑经历"><a href="#踩坑经历" class="headerlink" title="踩坑经历"></a>踩坑经历</h4><p>搜出来的结果大概就两种：</p>
<p>第一种是在你打开的源码地址的url地址基础上加<code>http://htmlpreview.github.io/?</code>或者<code>http://htmlpreview.github.com/?(注：填这个还是会转到前面那个前缀去的)</code>前缀。</p>
<p>第二种就是在你的项目branch上添加一个gh-pages分支，然后将你的项目复制一份到这个分支上，然后再进入settings的github pages进行设置就OK了。</p>
<p>总结下上面两种，添加前缀的方式确实比较简单，但是东西多了就会加载很慢，甚至不能正确的显示css样式，对于显示js的效果就更不使用了。所以，赶快放弃吧！创建分支的方式确实是很麻烦额，之前就是感觉麻烦的不得了所以没用这种方式，接下来要介绍的是创建分支的升级版，看下文~</p>
<h4 id="取经啦"><a href="#取经啦" class="headerlink" title="取经啦"></a>取经啦</h4><p>一度感觉小花说话很麻烦，请不要见怪！！！</p>
<p> 第一步就是找到你要展示的repo中的Settings</p>
<p><img src="http://opif0c56u.bkt.clouddn.com/yulan01.png" alt="Settings"></p>
<p>找到github pages那一栏,在Source中选择<code>master branch</code>,然后save</p>
<p><img src="http://opif0c56u.bkt.clouddn.com/yulan02.png" alt="Github Pages"></p>
<p>放大你的眼睛找到你自己的这串地址<br><img src="http://opif0c56u.bkt.clouddn.com/yulan03.png" alt="url前缀"></p>
<p>然后就可以愉快的预览了</p>
<p><img src="http://opif0c56u.bkt.clouddn.com/yulan04.png" alt="快去预览"></p>
<p>完美~</p>
<h4 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h4><p>刚开始自己踩坑发现不对劲但又苦于找不到解决方法，后来偶然有个同学告诉我这样纸，所以，我就只是枚小小的搬运工而已~</p>
<h6 id="给看完本文的孩纸们一个爱的么么哒"><a href="#给看完本文的孩纸们一个爱的么么哒" class="headerlink" title="给看完本文的孩纸们一个爱的么么哒"></a>给看完本文的孩纸们一个爱的么么哒</h6>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://opfk7lrr2.bkt.clouddn.com/DSC03498.JPG?imageView/2/w/600/q/90&quot; alt=&quot;这是一个很好看的地方&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class
    
    </summary>
    
      <category term="Web开发" scheme="http://visugar.com/categories/Web%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="前端" scheme="http://visugar.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="github" scheme="http://visugar.com/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>CSS3饼状loading效果</title>
    <link href="http://visugar.com/2017/05/17/20170517RoundLoading/"/>
    <id>http://visugar.com/2017/05/17/20170517RoundLoading/</id>
    <published>2017-05-17T00:36:33.000Z</published>
    <updated>2017-05-18T11:45:40.519Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://opfk7lrr2.bkt.clouddn.com/DSC00871.JPG?imageView/2/w/600/q/90" alt="武功山的秋天"></p>
<h4 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a><strong>写在前面</strong></h4><p>（附录有源码及效果）</p>
<p>之前碰到一个小练习，就是用纯CSS3来写饼状的loading效果，之前着实没有写过这玩意儿，小花完全没头绪，然后参考了张鑫旭老师的<a href="http://www.zhangxinxu.com/wordpress/2014/04/css3-pie-loading-waiting-animation/" target="_blank" rel="external">CSS3实现鸡蛋饼饼状图loading等待转转转</a>，还有些别的东西，用一种看起来有一点类似但是好像又不一样的方式完成了同样的效果，题目要求的大概就是这个样子：</p>
<p><img src="http://opif0c56u.bkt.clouddn.com/css3%E9%A5%BC%E7%8A%B6loading%E5%9B%BE.gif" alt="look me"></p>
<h4 id="开始"><a href="#开始" class="headerlink" title="开始"></a><strong>开始</strong></h4><p>琢磨了一下，睡一觉起来画了个图，理顺了一下，不过感觉此图有点难意会啊啊啊啊啊，没关系，小花会在后文一点一点解释哒~(红跟粉代表颜色，斜杠后面是z-index的值)<br><img src="http://opif0c56u.bkt.clouddn.com/862022799.jpg" alt="饼状loading流程图"></p>
<h4 id="原理"><a href="#原理" class="headerlink" title="原理"></a><strong>原理</strong></h4><p>这个东西分为两部分：外圈和内圆。颜色这东西都自定义啦，不过我画的的圈圈好像有点太大，然后动画时间是随便设的，反正转起来看着感觉有点怪怪的额</p>
<p>先上html结构<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">&lt;div class=&quot;con-wrap&quot;&gt;</div><div class="line"></div><div class="line">    &lt;!--外圈--&gt;</div><div class="line">    &lt;div class=&quot;out-round&quot;&gt;&lt;/div&gt;</div><div class="line">    </div><div class="line">    &lt;!--内圆，里面有半圆四个--&gt;</div><div class="line">    &lt;div class=&quot;in-round&quot;&gt;</div><div class="line">        &lt;div class=&quot;lt-round&quot;&gt;&lt;/div&gt;</div><div class="line">        &lt;div class=&quot;lt-mask&quot;&gt;&lt;/div&gt;</div><div class="line">        &lt;div class=&quot;rt-round&quot;&gt;&lt;/div&gt;</div><div class="line">        &lt;div class=&quot;rt-mask&quot;&gt;&lt;/div&gt;</div><div class="line">    &lt;/div&gt;</div><div class="line">&lt;/div&gt;</div></pre></td></tr></table></figure></p>
<p>外圈和内圆是通过position定位重合在一起，实质上外圈转完2圈，内圆的红色和粉色才各转完1圈（内圆的全程包括红色从1到0、粉色从1到0），所以内圆的动画时间应该是外圈的两倍！！！</p>
<ul>
<li><strong>外圈</strong></li>
</ul>
<p>外圈很简单，设置<code>border-radius:50%</code>即可画出一个圆，然后设置三条边框为红色，另外一条为透明，即画出了四分之三个圆边框（即外圆）。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">.out-round &#123;</div><div class="line">            width: 100px;</div><div class="line">            height: 100px;</div><div class="line">            border-radius: 50%;</div><div class="line">            margin: 150px auto;</div><div class="line">            border: 3px solid #FF298C;</div><div class="line">            border-left: 3px solid transparent;</div><div class="line">            animation: outRound 1s linear infinite running;</div><div class="line">        &#125;</div></pre></td></tr></table></figure></p>
<p><img src="http://opif0c56u.bkt.clouddn.com/%E5%9B%9B%E5%88%86%E4%B9%8B%E4%B8%89%E4%B8%AA%E5%9C%88.png" alt="四分之三个圆边框"></p>
<p>接下来是外圈的动画，为其设置的动画就是旋转一圈，infinite表示无限次<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">@keyframes outRound &#123;</div><div class="line">            0% &#123;</div><div class="line">                transform: rotate(120deg)</div><div class="line">            &#125;</div><div class="line">            100% &#123;</div><div class="line">                transform: rotate(-240deg)</div><div class="line">            &#125;</div><div class="line">        &#125;</div></pre></td></tr></table></figure></p>
<p>其中<code>rotate(120deg)</code>为旋转起始位置，可根据实际情况调整。</p>
<p>至此外圈就完成了，比较麻烦的是下面的内圆，不过根据图示应该是可以想象的。</p>
<ul>
<li><strong>内圆</strong></li>
</ul>
<p>此处有四个半圆，左边两个，右边两个（round为红色，mask为粉色），动画主要通过改变两个红色半圆的<code>z-index</code>值来控制各个半圆显示的优先顺序。内圆的css实现部分为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">/*左边两个半圆*/</div><div class="line">        .lt-round, .lt-mask &#123;</div><div class="line">            position: absolute;</div><div class="line">            width: 35px;</div><div class="line">            height: 70px;</div><div class="line">            border-radius: 35px 0 0 35px;</div><div class="line">            transform-origin: right center;</div><div class="line">        &#125;</div><div class="line">        </div><div class="line">/*右边两个半圆*/</div><div class="line">        .rt-round, .rt-mask &#123;</div><div class="line">            position: absolute;</div><div class="line">            left: 50%;</div><div class="line">            width: 35px;</div><div class="line">            height: 70px;</div><div class="line">            border-radius: 0 35px 35px 0;</div><div class="line">        &#125;</div></pre></td></tr></table></figure></p>
<p>下面过程描述内圆的动画全程（其中右边的粉色全程不需要动，右边红色部分只需要改变<code>z-index</code>的值来改变显示的优先级，从而实现显示和隐藏的效果来配合补充左半边的圆。）：</p>
<p>1.初始设置：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">红左 z-index：3</div><div class="line">粉1  z-index：2</div><div class="line"></div><div class="line">红右 z-index：1</div><div class="line">粉2  z-index：0</div></pre></td></tr></table></figure>
<p>模型图：</p>
<p><img src="http://opif0c56u.bkt.clouddn.com/%E7%99%BE%E5%88%86%E4%B9%8B0.png" alt="模型图1"></p>
<p>视觉效果图(忽略中间的白线)：</p>
<p><img src="http://opif0c56u.bkt.clouddn.com/01.png" alt="视觉效果图"></p>
<p>2.左边红色旋转完180度时（逆时针旋转所以是360→180→0）</p>
<p>模型图：</p>
<p><img src="http://opif0c56u.bkt.clouddn.com/%E7%99%BE%E5%88%86%E4%B9%8B25.png" alt="模型图2"></p>
<p>视觉效果图：</p>
<p><img src="http://opif0c56u.bkt.clouddn.com/02.png" alt="视觉效果图"></p>
<p>3.左边红色转完到0度时（此时左右两边的红色半圆被粉色覆盖）</p>
<p>模型图：</p>
<p><img src="http://opif0c56u.bkt.clouddn.com/%E7%99%BE%E5%88%86%E4%B9%8B50.png" alt="模型图3"></p>
<p>视觉效果图：</p>
<p><img src="http://opif0c56u.bkt.clouddn.com/03.png" alt="视觉效果图"></p>
<p>4.粉色半圆重复之前红色半圆的动画（即左边粉色360→180→0）</p>
<p>模型图：</p>
<p><img src="http://opif0c56u.bkt.clouddn.com/%E7%99%BE%E5%88%86%E4%B9%8B75.png" alt="模型图4"></p>
<p>视觉效果图：</p>
<p><img src="http://opif0c56u.bkt.clouddn.com/04.png" alt="视觉效果图"></p>
<p>5.当左边粉色旋转到0度时，全部半圆回到了最初始的状态，整个动画即完成（在相同时间下外圈完成了2次的动画）。</p>
<p>模型图：</p>
<p><img src="http://opif0c56u.bkt.clouddn.com/%E7%99%BE%E5%88%86%E4%B9%8B100.png" alt="模型图5"></p>
<p>视觉效果图：</p>
<p><img src="http://opif0c56u.bkt.clouddn.com/05.png" alt="视觉效果图"></p>
<h4 id="动画代码部分"><a href="#动画代码部分" class="headerlink" title="动画代码部分"></a><strong>动画代码部分</strong></h4><p>1.前半程为左边红色旋转一周，后半程为粉色旋转一周。动画实现如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line">/*左边红色完成第一圈的旋转*/</div><div class="line">@keyframes ltRound &#123;</div><div class="line">            0% &#123;</div><div class="line">                transform: rotate(360deg);</div><div class="line">            &#125;</div><div class="line">            24.9% &#123;</div><div class="line">                z-index: 3;</div><div class="line">            &#125;</div><div class="line">            25% &#123;</div><div class="line">                z-index: 1;</div><div class="line">                transform: rotate(180deg);</div><div class="line">            &#125;</div><div class="line">            50% &#123;</div><div class="line">                transform: rotate(0deg);</div><div class="line">            &#125;</div><div class="line">            74.9% &#123;</div><div class="line">                z-index: 1;</div><div class="line">            &#125;</div><div class="line">            75%, 100% &#123;</div><div class="line">                z-index: 3;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">/*右边红色圆通过z-index来控制显示和隐藏，从而达到在适当时间配上左半圆的效果*/</div><div class="line">@keyframes rtRound &#123;</div><div class="line">            0%, 24.9% &#123;</div><div class="line">                z-index: 1;</div><div class="line">            &#125;</div><div class="line">            25% &#123;</div><div class="line">                z-index: -3;</div><div class="line">            &#125;</div><div class="line">            74.9% &#123;</div><div class="line">                z-index: -3;</div><div class="line">            &#125;</div><div class="line">            75%, 100% &#123;</div><div class="line">                z-index: 1;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        </div><div class="line">/*左边粉色完成第二圈的旋转*/</div><div class="line">@keyframes ltMask &#123;</div><div class="line">            0%, 25%, 50% &#123;</div><div class="line">                transform: rotate(360deg);</div><div class="line">            &#125;</div><div class="line">            75% &#123;</div><div class="line">                transform: rotate(180deg);</div><div class="line">            &#125;</div><div class="line">            100% &#123;</div><div class="line">                transform: rotate(0deg);</div><div class="line">            &#125;</div><div class="line">        &#125;</div></pre></td></tr></table></figure>
<p>2.在全部代码未完成时，可以将动画时间设大一点，这样便于观察，搞完了再设回去就OK了。</p>
<p>3.由于动画是匀速变化的，但是z-index的值不能匀速变化，所以只能在某个很短时间内去改变z-index的值。这样才能达到效果（突然感觉这种实现好像也不是很好）</p>
<h4 id="小结"><a href="#小结" class="headerlink" title="小结"></a><strong>小结</strong></h4><ol>
<li>没做兼容，在chrome中无异常，别的我就不太知道了</li>
<li>只是用来练习练习，实际上不一定会用到，但是里面几个知识点还是hei有用滴</li>
<li>小花是小白，对很多东西都还没整明白，欢迎大佬们指点指点~</li>
<li>这几个图画的我心好累，sei能给小花推荐个好用点的额</li>
</ol>
<h4 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a><strong>源代码</strong></h4><p><a href="https://github.com/visugar/ife2017/blob/master/04nuomi/task413/index.html" target="_blank" rel="external">源码地址</a></p>
<p><a href="https://visugar.github.io/ife2017/04nuomi/task413/index.html" target="_blank" rel="external">预览地址</a></p>
]]></content>
    
    <summary type="html">
    
      通过z-index值的改变来实现CSS3饼状loading效果
    
    </summary>
    
      <category term="Web开发" scheme="http://visugar.com/categories/Web%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="前端" scheme="http://visugar.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="css3" scheme="http://visugar.com/tags/css3/"/>
    
      <category term="z-index" scheme="http://visugar.com/tags/z-index/"/>
    
  </entry>
  
  <entry>
    <title>RegExp（正则表达式）常用要点小结</title>
    <link href="http://visugar.com/2017/05/11/20170511RegRxp/"/>
    <id>http://visugar.com/2017/05/11/20170511RegRxp/</id>
    <published>2017-05-11T08:17:05.000Z</published>
    <updated>2017-05-18T11:42:05.968Z</updated>
    
    <content type="html"><![CDATA[<h4 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h4><p><img src="http://upload-images.jianshu.io/upload_images/1727565-eb70c2f7892d2171.JPG?imageMogr2/auto-orient/strip%7CimageView2/2/w/800" alt="香港"><br>正则表达式用到的地方很多，但是每次很久不用就全忘光了，每次都要重新看一遍文档，为了节省时间，把它的一些基本要点画总结在一张图片中，这样方便以后查看。</p>
<p>PS：细节的东西还是需要看详细点的文档。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1727565-65f035c9dc1f499a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="RegExp小结"></p>
<p><a href="http://opohu5hxr.bkt.clouddn.com/RegExp%28%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%29.png" target="_blank" rel="external">原图传送门</a></p>
]]></content>
    
    <summary type="html">
    
      把正则表达式的是十点放到一张图上便于日后查询
    
    </summary>
    
      <category term="划重点" scheme="http://visugar.com/categories/%E5%88%92%E9%87%8D%E7%82%B9/"/>
    
    
      <category term="前端" scheme="http://visugar.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="文档" scheme="http://visugar.com/tags/%E6%96%87%E6%A1%A3/"/>
    
      <category term="正则表达式" scheme="http://visugar.com/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>中文技术文档规范-改自阮一峰老师</title>
    <link href="http://visugar.com/2017/05/10/20170510DocRule/"/>
    <id>http://visugar.com/2017/05/10/20170510DocRule/</id>
    <published>2017-05-10T01:08:30.000Z</published>
    <updated>2017-05-18T11:41:47.441Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://upload-images.jianshu.io/upload_images/1727565-e450ee7e521b3f2f.JPG?imageMogr2/auto-orient/strip%7CimageView2/2/w/800" alt="湖北石首"></p>
<h4 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h4><p>以前从来去想一篇技术文章要怎么架构，总是随自己想到什么写什么，然后看到了阮一峰老师的总结，就把它改成了思维导图，以便记忆查询。</p>
<p>原文地址：<a href="https://github.com/ruanyf/document-style-guide" target="_blank" rel="external">https://github.com/ruanyf/document-style-guide</a></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1727565-a07e07f5691f0e14.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="中文技术文档写作规范"></p>
<p><a href="http://opohu5hxr.bkt.clouddn.com/%E4%B8%AD%E6%96%87%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3%E5%86%99%E4%BD%9C%E8%A7%84%E8%8C%83-20170427.png" target="_blank" rel="external">原图传送门</a></p>
]]></content>
    
    <summary type="html">
    
      根据阮一峰老师对中文技术文档规范的总结改成的思维导图
    
    </summary>
    
      <category term="划重点" scheme="http://visugar.com/categories/%E5%88%92%E9%87%8D%E7%82%B9/"/>
    
    
      <category term="前端" scheme="http://visugar.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="写作规范" scheme="http://visugar.com/tags/%E5%86%99%E4%BD%9C%E8%A7%84%E8%8C%83/"/>
    
      <category term="文档" scheme="http://visugar.com/tags/%E6%96%87%E6%A1%A3/"/>
    
  </entry>
  
  <entry>
    <title>菜鸟张小花之多种前端布局实现</title>
    <link href="http://visugar.com/2017/05/06/20170506Layout/"/>
    <id>http://visugar.com/2017/05/06/20170506Layout/</id>
    <published>2017-05-06T08:09:57.000Z</published>
    <updated>2017-07-27T12:18:19.763Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://opfk7lrr2.bkt.clouddn.com/DSC07777.JPG?imageView/2/w/600/q/90" alt="look me"></p>
<h3 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h3><ul>
<li>由于知识有限，有的内容可能有点小错误什么的，仅供参考参考，欢迎大佬们指正<a id="more"></a>，小花在这里谢过~</li>
<li>小贴士（to freshman）：给每个块都加上颜色，更好辨识。</li>
<li>关于代码：这里给出的都是css部分，html部分用最常规的结构就好啦</li>
</ul>
<h3 id="1-水平居中"><a href="#1-水平居中" class="headerlink" title="1. 水平居中"></a>1. 水平居中</h3><p>方法一：margin:0 auto; （最常用的居中布局方式）</p>
<p>方法二：text-align和inline-block的结合（设置父元素的text-align为center）。</p>
<p>这种方式最好应用于图片、按钮、文字之类的居中模式，否则就需要借助inline-block来进行居中布局。</p>
<p>方法三：position绝对定位来实现居中布局。</p>
<p>适用于块级元素不给出宽高的情况下(需要借助transtrom的tanslateX方法)。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">#parent&#123;</div><div class="line">	position: relative;</div><div class="line">&#125;</div><div class="line">#child&#123;</div><div class="line">	position: absolute;</div><div class="line">	top: 0;</div><div class="line">	left: 50%;</div><div class="line">	transform: translateX(-50%);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>方法四：利用flex弹性布局的一个属性。</p>
<p>子元素宽度已知的情况下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">#parent&#123;</div><div class="line">	display: flex;</div><div class="line">	justify-content: center;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>其他还有很多方法，一般用的不太多。并且各种方法优缺点不一样，可选择性使用。</p>
<h3 id="2-水平居中及垂直居中"><a href="#2-水平居中及垂直居中" class="headerlink" title="2. 水平居中及垂直居中"></a>2. 水平居中及垂直居中</h3><p>方法一：先说一种神奇的方式吧<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">1. 子元素 div 绝对定位</div><div class="line">2. 父元素需要被定位</div><div class="line">3. 子元素 top、bottom、left、right 四个位置值均为 0</div><div class="line">4. 子元素 margin: auto;</div></pre></td></tr></table></figure></p>
<p>下面代码是可以实现的，但还有点问题，大家帮小花看看~</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">#parent&#123;</div><div class="line">	width: 100%;</div><div class="line">	height:100%;</div><div class="line">	position: fixed;</div><div class="line">&#125;</div><div class="line">#child&#123;</div><div class="line">	width: 400px;</div><div class="line">	height: 200px;</div><div class="line">	position: absolute;</div><div class="line">	top: 0;</div><div class="line">	bottom: 0;</div><div class="line">	left: 0;</div><div class="line">	right: 0;</div><div class="line">	margin: auto;</div><div class="line">	background-color: #ccc;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>方式二：利用position的绝对定位及负边框来实现。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"> #parent&#123;</div><div class="line">	position: fixed;</div><div class="line">	width: 100%;</div><div class="line">	height: 100%;</div><div class="line">&#125;</div><div class="line">#child&#123;</div><div class="line">	position: absolute;</div><div class="line">    left: 50%;</div><div class="line">    top: 50%;</div><div class="line">    width: 400px;</div><div class="line">    height: 200px;</div><div class="line">    margin-top: -100px;</div><div class="line">    margin-left: -200px;</div><div class="line">    background-color: #ccc;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>对于未给出宽高的元素，又需要请transform登场了，同时需要做好各浏览器的兼容。对于我这种懒癌患者，就不给出兼容代码嘞~</p>
<p>其他应该还有一些方法，暂时还没想到，等写出来了再补补（哦对了，忘了说flex了，算了还是不写了）</p>
<h3 id="3-左边固定右边自适应的两列布局"><a href="#3-左边固定右边自适应的两列布局" class="headerlink" title="3. 左边固定右边自适应的两列布局"></a>3. 左边固定右边自适应的两列布局</h3><p>我猜吧，大家对这种布局方式最熟悉不过了，平时用的也会比较多，所以呢，你们写的应该都会比我的好~</p>
<p>方式一：float+margin的方式</p>
<p>这种方式一定要记得给父元素清除浮动啊，不然就尴尬了呢，这里插播一种全局性(这个词似乎不太对)的清除浮动的伪元素方法.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">.clearfix:after &#123;</div><div class="line">    content: &apos;.&apos;;</div><div class="line">    height: 0;</div><div class="line">    overflow: hidden;</div><div class="line">    clear: both;</div><div class="line">    display: block;</div><div class="line">    visibility: hidden;</div><div class="line">&#125;</div><div class="line">.clearfix &#123;</div><div class="line">    zoom: 1;  &lt;!--hack--&gt;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>看起来有点小复杂啊，这里不分析这种方法的原理，记住就好了。当然你也可以直接借助触发BFC的方式来解决（偷偷告诉你，常用的方式就是给你的父元素设置<code>overflow: hidden;</code>啦）。</p>
<p>哦+语气~好像跑偏了，说好的布局呢，见下诉代码：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">#left&#123;</div><div class="line">	float: left;</div><div class="line">	width: 100px;</div><div class="line">&#125;</div><div class="line">#right&#123;</div><div class="line">	margin-left: 120px;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>方式二：float+overflow的方式</p>
<p>这就是传说中利用BFC的规则来实现两列布局啊啊啊！</p>
<p>这种方式直接不需要清除浮动什么的就可以了，也不会影响前后文，用起来比较爽丫。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">#left&#123;</div><div class="line">	float: left;</div><div class="line">	width: 100px;</div><div class="line">	margin-right: 20px; &lt;!--好歹留个空啊嘿嘿--&gt;</div><div class="line">&#125;</div><div class="line">#right&#123;</div><div class="line">	overflow: hidden;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>方式三：float+margin+position的方式</p>
<p>这个方式呢也用到过，但是要考虑的比较多一点，不过其实也还好。<br>接下来请看实现代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">#parent&#123;</div><div class="line">	position: relative;</div><div class="line">&#125;</div><div class="line">#left&#123;</div><div class="line">	float: left;</div><div class="line">	width: 100px;</div><div class="line">	background-color: #ccc;</div><div class="line">&#125;</div><div class="line">#right&#123;</div><div class="line">	position: absolute;</div><div class="line">	top: 0;</div><div class="line">	left: 120px;</div><div class="line">	background-color:pink;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>这种方式实现起来很简单，但是对后文是有影响的，需要自己解决一下，懒小花就不写啦~</p>
<p>方式四：flex方式</p>
<p>这个呢，坑肯定是比较多的，建议用在小范围的布局，当然某些时候用起来确实比较爽歪歪啦<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">#parent&#123;</div><div class="line">	display: flex;</div><div class="line">&#125;</div><div class="line">#left&#123;</div><div class="line">	width: 100px;</div><div class="line">	margin-right: 20px;</div><div class="line">&#125;</div><div class="line">#right&#123;</div><div class="line">	flex: 1;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>其他的吧，我暂时还没用到也没写到~网上一搜会有好多好多精讲的。</p>
<h3 id="4-左边自适应右边固定"><a href="#4-左边自适应右边固定" class="headerlink" title="4. 左边自适应右边固定"></a>4. 左边自适应右边固定</h3><p>话说其实我就只写了一种方法，我都有点不好意思放上来了，不管了，小花的脸皮比较厚，不怕！</p>
<p>方式一： 当然还是position</p>
<p>反正很多情况都可以用position来解决，但是，同时也会有一些其他问题出现，所以，自行思考用不用~<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">#parent &#123;</div><div class="line">	position: relative;</div><div class="line">&#125;</div><div class="line">#left &#123;</div><div class="line">	margin-right:220px;</div><div class="line">&#125;</div><div class="line">#right &#123;</div><div class="line">    position: absolute;</div><div class="line">    right:0;</div><div class="line">    top:0;</div><div class="line">    width: 200px;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="5-两边固定中间自适应的三列布局"><a href="#5-两边固定中间自适应的三列布局" class="headerlink" title="5. 两边固定中间自适应的三列布局"></a>5. 两边固定中间自适应的三列布局</h3><p>其实这个布局用的也挺多的啊哈，嗯，昨天写的作业就是这个！</p>
<p>方式一：纯float方式<br>注意：</p>
<ol>
<li>左侧元素与右侧元素优先渲染，分别向左和向右浮动</li>
<li>中间元素在文档流的最后渲染，自动插入到左右两列元素的中间，随后设置 margin 左右边距分别为左右两列的宽度，将中间元素调整到正确的位置。</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">.left&#123;</div><div class="line">	float: left;</div><div class="line">	width: 200px;</div><div class="line">	height: 200px;</div><div class="line">&#125;</div><div class="line">.right&#123;</div><div class="line">	float: right;</div><div class="line">	width: 100px;</div><div class="line">	height: 100px;</div><div class="line">&#125;</div><div class="line">.middle&#123;</div><div class="line">	margin:0 120px 0 220px;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p> 但凡用float的时候都要想一下父元素上清除浮动这个问题！</p>
<p>方式二：position的绝对定位</p>
<p>其实感觉跟float的原理差不多，都是将左右两侧的块先固定好，再对中间部分进行处理，只不过自己可以在不同情况下选择float或者position。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">.parent&#123;</div><div class="line">	position: relative;</div><div class="line">&#125;</div><div class="line">.left&#123;</div><div class="line">	position: absolute;</div><div class="line">	width: 200px;</div><div class="line">	height: 200px;</div><div class="line">	top: 0;</div><div class="line">	left: 0;</div><div class="line">&#125;</div><div class="line">.right&#123;</div><div class="line">	position: absolute;</div><div class="line">	top: 0;</div><div class="line">	right: 0;</div><div class="line">	width: 100px;</div><div class="line">	height: 100px;</div><div class="line">&#125;</div><div class="line">.middle&#123;</div><div class="line">	margin:0 120px 0 220px;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>方式三：flex的弹性布局</p>
<p>不得不说的是其实很多布局都可以用flex来实现(简单粗暴嘿嘿)，但是flex的兼容性不是很好，并且还有别问题，所以保险起见还是选择常用的，这里简单介绍下。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">.parent&#123;</div><div class="line">	display: flex;</div><div class="line">&#125;</div><div class="line">.left&#123;</div><div class="line">	width: 200px;</div><div class="line">	height: 200px;</div><div class="line">&#125;</div><div class="line">.right&#123;</div><div class="line">	width: 100px;</div><div class="line">	height: 100px;</div><div class="line">&#125;</div><div class="line">.middle&#123;</div><div class="line">	flex: 1;</div><div class="line">	margin:0 20px;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>方式四：最后该淘宝的<code>双翼布局</code>闪亮登场了</p>
<p>要注意的是这种布局方式需要将主栏优先渲染，然后再加上两边的翅膀，即双翼，不过话又说话来，虽然小花是按照这个套路写的，但也不确定自己写的就是双翼布局。<br>为了不误人子弟，在这先说明只是参考参考哟（欢迎大佬纠正）~</p>
<ul>
<li>第一步，先将主栏左浮动，并设宽度为100%，即铺满父元素</li>
<li>第二步，将左栏左浮动，并设左外边距为-100%</li>
<li>第三步，将右栏左浮动，并设左外边距为负的自身宽度</li>
<li>第四步，设置主栏，嘿嘿，这时候不管你使用什么方法都达不到效果，解决办法就是给主栏的内容加一个包裹层，并设左右外边距为左右两侧的宽度。</li>
<li>第五步，好了，完美！（但是别忘了，要清除浮动哦~）</li>
</ul>
<h3 id="6-是时候小结一波了"><a href="#6-是时候小结一波了" class="headerlink" title="6. 是时候小结一波了"></a>6. 是时候小结一波了</h3><ul>
<li>首先，每种方式都小试了一下，基本上效果是可以达到的，当然实际情况中会比较复杂，你会遇到各种各样的麻烦，祝你好运~</li>
<li>每种方式的优缺点其实对于我这种萌新来说也是比较懵，只是这几天写了几个作业才想到要小小总结下的</li>
<li>第一次用markdown写文字棒棒哒，不要介意某写地方可能写错了</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://opfk7lrr2.bkt.clouddn.com/DSC07777.JPG?imageView/2/w/600/q/90&quot; alt=&quot;look me&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;由于知识有限，有的内容可能有点小错误什么的，仅供参考参考，欢迎大佬们指正
    
    </summary>
    
      <category term="Web开发" scheme="http://visugar.com/categories/Web%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="前端" scheme="http://visugar.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="CSS布局" scheme="http://visugar.com/tags/CSS%E5%B8%83%E5%B1%80/"/>
    
      <category term="web" scheme="http://visugar.com/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>hexo从零开始到搭建完整</title>
    <link href="http://visugar.com/2017/05/04/20170504SetUpHexoBlog/"/>
    <id>http://visugar.com/2017/05/04/20170504SetUpHexoBlog/</id>
    <published>2017-05-04T08:16:15.000Z</published>
    <updated>2017-08-29T11:23:44.441Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://opif0c56u.bkt.clouddn.com/look-me.png?imageView/2/w/600/q/90" alt="look me"></p>
<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>其实平时自己写的文章并不多，偶尔看到一些东西会做点笔记，但是每次写的东西都会到处放<a id="more"></a>，不好找，所以才想着自己搭建一个人博客网站，现在大家用<code>hexo</code>比较多，也比较方便，并且能使用的主题也很多，所以小花就用她啦~</p>
<p>本篇为从零开始的基础篇，其他SEO、评论系统、统计等请看<a href="http://visugar.com/2017/08/01/20170801HexoPlugins/">Hexo博客添加SEO-评论系统-阅读统计-站长统计</a>，本篇所包含的内容如下：</p>
<ol>
<li>安装Git Bash</li>
<li>安装NodeJs</li>
<li>安装hexo</li>
<li>生成SSH并添加到github</li>
<li>部署项目</li>
<li>上传到github</li>
<li>绑定个人域名</li>
<li>修改及配置主题</li>
<li>添加RSS</li>
<li>添加评论</li>
<li>写文章部分</li>
</ol>
<h3 id="耍起来"><a href="#耍起来" class="headerlink" title="耍起来"></a>耍起来</h3><p>由于小花的电脑在搭建博客之前就有了各种环境，但是对于没有任何基础的人来讲，我觉得还是从源头开始讲会好一点，就像教别人做菜，总得把所有的用料及步骤说清楚对吧？（大佬们可以自动忽略啊啊啊啊~）</p>
<h4 id="1-安装Git-Bash"><a href="#1-安装Git-Bash" class="headerlink" title="1. 安装Git Bash"></a>1. <strong>安装Git Bash</strong></h4><p>我一直不太喜欢在cmd中操作各种命令，所以挑了这个比较好使的<a href="https://git-for-windows.github.io/" target="_blank" rel="external">Git Bash</a>, 我的是windows环境，所以下载windows版本并安装就可以了。<br><a href="https://git-for-windows.github.io/" target="_blank" rel="external">下载地址</a></p>
<p>安装步骤：双击下载好的exe文件，一路next就好啦</p>
<p>安装好后，打开gitbash，查看版本：</p>
<p>命令：<code>git version</code> (写这篇博客的时候最新版本：2.12.2)</p>
<p><img src="http://opif0c56u.bkt.clouddn.com/gitversion.png" alt="git version"></p>
<p>然后你就可以在这里发挥你的聪明才智了</p>
<h4 id="2-安装NodeJs"><a href="#2-安装NodeJs" class="headerlink" title="2. 安装NodeJs"></a>2. <strong>安装NodeJs</strong></h4><p>Hexo是基于nodeJS环境的静态博客，里面的npm工具很有用啊，所以还是老老实实把这玩意儿装了吧</p>
<p><a href="https://nodejs.org/en/" target="_blank" rel="external">下载地址</a>(说明：LTS为长期支持版，Current为当前最新版)</p>
<p>安装步骤：反正下载好msi文件后，双击打开安装，也是一路next，不过在Custom Setup这一步记得选 <code>Add to PATH</code> ,这样你就不用自己去配置电脑上环境变量了，装完在按 <code>win + r</code> 快捷键调出运行，然后输入cmd确定，在cmd中输入path可以看到你的node是否配置在里面（环境变量），没有的话你就自由发挥吧。</p>
<p>查看版本：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">命令：node -v</div></pre></td></tr></table></figure></p>
<p><img src="http://opif0c56u.bkt.clouddn.com/node-v.png" alt="node-version"><br>又到自由发挥的时候了</p>
<h4 id="3-安装hexo"><a href="#3-安装hexo" class="headerlink" title="3. 安装hexo"></a>3. <strong>安装hexo</strong></h4><p>看到这么多安装，千万不要紧张，小哥哥小姐姐们一定要稳住，别怕，因为后面的东西都是在gitbash中用npm工具安装就好了。</p>
<p>先创建一个文件夹（用来存放所有blog的东西），然后<code>cd</code>到该文件夹下。</p>
<p>安装hexo命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm i -g hexo</div></pre></td></tr></table></figure></p>
<p> 安装完成后，查看版本：</p>
<p><img src="http://opif0c56u.bkt.clouddn.com/hexo-v.png" alt="npm-v"></p>
<p> 初始化命令：<code>hexo init</code> ，初始化完成之后打开所在的文件夹可以看到以下文件：</p>
<p><img src="http://opif0c56u.bkt.clouddn.com/hexo-init.png" alt="myblog"></p>
<p>解释一下：</p>
<ul>
<li>node_modules：是依赖包</li>
<li>public：存放的是生成的页面</li>
<li>scaffolds：命令生成文章等的模板</li>
<li>source：用命令创建的各种文章</li>
<li>themes：主题</li>
<li>_config.yml：整个博客的配置</li>
<li>db.json：source解析所得到的</li>
<li>package.json：项目所需模块项目的配置信息</li>
</ul>
<p>做好这些前置工作之后接下来的就是各种配配配置了。</p>
<h4 id="4-生成SSH并添加到github"><a href="#4-生成SSH并添加到github" class="headerlink" title="4. 生成SSH并添加到github"></a>4. <strong>生成SSH并添加到github</strong></h4><p>没账号的创建账号，有账号的看下面。</p>
<p>创建一个repo，名称为<code>yourname.github.io</code>, 其中yourname是你的github名称，按照这个规则创建才有用哦，如下：<br><img src="http://opif0c56u.bkt.clouddn.com/new-repo.png" alt="new-repo"></p>
<p><img src="http://opif0c56u.bkt.clouddn.com/create-repo.png" alt="create-repo"></p>
<p>回到gitbash中，配置github账户信息（YourName和YourEail都替换成你自己的）：</p>
<p><img src="http://opif0c56u.bkt.clouddn.com/username.png" alt="username"><br><img src="http://opif0c56u.bkt.clouddn.com/email.png" alt="email"></p>
<p>创建SSH</p>
<p>在gitbash中输入：<code>ssh-keygen -t rsa -C &quot;youremail@example.com</code>，生成ssh。然后按下图的方式找到<code>id_rsa.pub</code>文件的内容。</p>
<p><img src="http://opif0c56u.bkt.clouddn.com/ssh.png" alt="ssh-key"></p>
<p>将上面获取的ssh放到github中：</p>
<p><img src="http://opif0c56u.bkt.clouddn.com/settings.png" alt="settings"></p>
<p><img src="http://opif0c56u.bkt.clouddn.com/ssh-key.png" alt="ssh-key"><br>添加一个 <code>New SSH key</code> ，title随便取，key就填刚刚那一段。</p>
<p>在gitbash中验证是否添加成功：<code>ssh -T git@github.com</code></p>
<p>完成下一步你就成功啦！</p>
<h4 id="5-部署项目"><a href="#5-部署项目" class="headerlink" title="5. 部署项目"></a>5. <strong>部署项目</strong></h4><p>用编辑器打开你的blog项目，修改<code>_config.yml</code>文件的一些配置(冒号之后都是有一个半角空格的)：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line">  type: git</div><div class="line">  repo: https://github.com/YourgithubName/YourgithubName.github.io.git</div><div class="line">  branch: master</div></pre></td></tr></table></figure>
<p>回到gitbash中，进入你的blog目录，分别执行以下命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">hexo clean</div><div class="line">hexo generate</div><div class="line">hexo server</div></pre></td></tr></table></figure></p>
<p>注：hexo 3.0把服务器独立成个别模块，需要单独安装：<code>npm i hexo-server</code>。</p>
<p>打开浏览器输入：<code>http://localhost:4000</code></p>
<p>接着你就可以遇见天使的微笑了~</p>
<h4 id="6-上传到github"><a href="#6-上传到github" class="headerlink" title="6. 上传到github"></a>6. <strong>上传到github</strong></h4><p>先安装一波：<code>npm install hexo-deployer-git --save</code>（这样才能将你写好的文章部署到github服务器上并让别人浏览到）</p>
<p>执行命令(建议每次都按照如下步骤部署)：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">hexo clean</div><div class="line">hexo generate</div><div class="line">hexo deploy</div></pre></td></tr></table></figure></p>
<p>注意deploy的过程中要输入你的username及passward。如下：</p>
<p><img src="http://opif0c56u.bkt.clouddn.com/deploy.png" alt="deploy"></p>
<p>在浏览器中输入<code>http://yourgithubname.github.io</code>就可以看到你的个人博客啦，是不是很兴奋！</p>
<p>感觉gitbash中东西太多的时候输入<code>clear</code>命令清空。</p>
<h4 id="7-绑定个人域名"><a href="#7-绑定个人域名" class="headerlink" title="7. 绑定个人域名"></a>7. <strong>绑定个人域名</strong></h4><p>不想绑定的自行忽略</p>
<p>第一步购买域名：随便在哪个网站买一个就好了，小花是在阿里云购买的<a href="http://visugar.com">visugar.com</a>, DNS也是顺道在那买的。</p>
<p>第二步添加CNAME：在项目的source文件夹下新建一个名为CNAME的文件，在里面添加你购买的域名，比如我添加的是<code>visugar.com</code>，只能添加一个哦。</p>
<p>到DNS中添加一条记录：</p>
<p><img src="http://opif0c56u.bkt.clouddn.com/dns-note.png" alt="dns-note"></p>
<p>其中ip地址为你的github的地址，可在cmd中ping一下就能看到(<code>ping yourname.github.io</code>)：</p>
<p><img src="http://opif0c56u.bkt.clouddn.com/githubip.png" alt="github-ip"></p>
<p>接着再次部署一下，用你购买的域名打开，就可以看到你的博客啦~</p>
<h4 id="8-修改及配置主题"><a href="#8-修改及配置主题" class="headerlink" title="8. 修改及配置主题"></a>8. <strong>修改及配置主题</strong></h4><p>hexo初始化之后默认的主题是<code>landscape</code> , 然后你可以去<a href="https://hexo.io/themes/" target="_blank" rel="external">这个地址</a>里面找到你想要的主题。在github中搜索你要的主题名称，里面都会有该主题的如何使用的介绍，按着来就好了，反正就是改改改！我选的是<code>hueman</code>,看起来挺不错，至少是我喜欢的类型。</p>
<p><img src="http://opif0c56u.bkt.clouddn.com/themes.png" alt="themes"></p>
<p>跟该主题相关的配置在<code>themes/hueman/_config.yml</code>里面,然后根据你的需要在这配配配就行了。</p>
<p><img src="http://opif0c56u.bkt.clouddn.com/themes-config.png" alt="themes-config"><br>有的东西我也不知道是啥玩意儿，你要多试多倒腾几次，就能意会啦!下面是针对我所选的主题的两小点(别的主题我没看，可能也是类似:</p>
<p><strong>在导航栏添加点东西</strong></p>
<p>例如我添加了一个更新日志的模块。</p>
<p>在主题的配置文件中，menu添加一栏：<code>Board: /board</code>。</p>
<p>然后在source中添加一个board，即对应上面的名字。然后再创建一个index.md，里面可以写你想写的内容。</p>
<p>在主题的<code>hueman/langulages/zh-CN.yml</code>中的index适当的位置加：<code>board: &#39;更新日志&#39;</code>，位置和名字是你自己设定。</p>
<p> 重新部署，然后就OK了</p>
<p><strong>在侧边栏添加点东西</strong></p>
<p>回到你的主题的配置文件中，找到<code>widgets</code>一栏，在你要添加的位置处添加一条你自定义的名称。例如我的叫<code>communiation</code>且放在了第二行。</p>
<p>在上面所提到的<code>zh-CN.yml</code>文件中找到sidebar一栏，添加<code>communiation: &#39;你要设的名称&#39;</code>。</p>
<p>在<code>hueman/layout/widget</code>中添加一个<code>communiation.ejs</code>,填入模板<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&lt;% if (site.posts.length) &#123; %&gt;</div><div class="line">    &lt;div class=&quot;widget-wrap widget-list&quot;&gt;</div><div class="line">        &lt;h3 class=&quot;widget-title&quot;&gt;&lt;%= __(&apos;sidebar.communiation&apos;) %&gt;&lt;/h3&gt;</div><div class="line">        &lt;div class=&quot;widget&quot;&gt;</div><div class="line">            &lt;!--这里添加你要写的内容--&gt;</div><div class="line">        &lt;/div&gt;</div><div class="line">    &lt;/div&gt;</div><div class="line">&lt;% &#125; %&gt;</div></pre></td></tr></table></figure></p>
<h4 id="9-添加RSS"><a href="#9-添加RSS" class="headerlink" title="9. 添加RSS"></a>9. <strong>添加RSS</strong></h4><p>先安装rss相关插件：<code>npm i hexo-generator-feed</code></p>
<p>在你的项目的<code>_config.yml</code>配置文件下找到Extensions添加如下内容：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"># Extensions  #插件和主题</div><div class="line">## Plugins: https://hexo.io/plugins/</div><div class="line">## Themes: https://hexo.io/themes/</div><div class="line">#RSS订阅</div><div class="line">plugin:</div><div class="line">- hexo-generator-feed</div><div class="line">#Feed Atom</div><div class="line">feed:</div><div class="line">  type: atom</div><div class="line">  path: atom.xml</div><div class="line">  limit: 20</div></pre></td></tr></table></figure>
<p>进入到你的主题的配置文件下，找到你的放rss的位置，添加<code>/atom.xml</code>即可。</p>
<p>重新部署再打开就能看到效果啦~</p>
<h4 id="10-添加评论"><a href="#10-添加评论" class="headerlink" title="10. 添加评论"></a>10. <strong>添加评论</strong></h4><p><strong>20170812更新：</strong><br>云更贴已在2017年8月1日停止服务，具体评论系统文章统计站长统计及百度SEO谷歌SEO什么的可参考<a href="http://visugar.com/2017/08/01/20170801HexoPlugins/">Hexo博客添加SEO-评论系统-阅读统计-站长统计</a></p>
<p>此段已失效。</p>
<p>先选一个你要使用的第三方评论系统，最好找个靠谱点的（我使用的是网易云跟帖）。</p>
<p>在主题的配置文件下找到comment，添加一行，例如我添加的是<code>yungentie: 此处自由发挥</code></p>
<p>注册完评论系统后获取相应的代码，然后在主题的layout下找到comment新建一个ejs模板文件，名称自定义。</p>
<p><img src="http://opif0c56u.bkt.clouddn.com/yungentie.png" alt="yungentie"></p>
<p>找到你的article.ejs模板文件，加上<code>&lt;%- partial(&#39;comment/你刚刚取得名字&#39;) %&gt;</code>保存。</p>
<p>重新部署，OK啦</p>
<h4 id="11-写文章部分"><a href="#11-写文章部分" class="headerlink" title="11. 写文章部分"></a>11. <strong>写文章部分</strong></h4><ul>
<li>新建文章：<code>hexo new &#39;文章名&#39;</code>，然后你就可以在<code>source/_posts</code>路径下看到你创建的文章啦，编辑完成之后按照前面说的方式部署，在浏览器刷新就能看到你的文章了。</li>
<li>关于具体的文章编辑你可以看下<a href="https://hexo.io/zh-cn/docs/writing.html" target="_blank" rel="external">官网的介绍</a></li>
<li>至于markdown，可以自行发挥啦~</li>
</ul>
<h3 id="小结一波"><a href="#小结一波" class="headerlink" title="小结一波"></a>小结一波</h3><ul>
<li>在哪里跌倒，就在哪里趴下，休息一会儿你会发现新大陆的哦~</li>
<li>本文针对的是从来没用hexo搭建过个人博客的小伙伴，不过文中可能会有一些小错误，欢迎大佬们指正，小花不胜感激！</li>
<li>感觉我好啰嗦啊，可是没办法，我就是这么爱打字丫</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://opif0c56u.bkt.clouddn.com/look-me.png?imageView/2/w/600/q/90&quot; alt=&quot;look me&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;其实平时自己写的文章并不多，偶尔看到一些东西会做点笔记，但是每次写的东西都会到处放
    
    </summary>
    
      <category term="Web开发" scheme="http://visugar.com/categories/Web%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="前端" scheme="http://visugar.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="hexo" scheme="http://visugar.com/tags/hexo/"/>
    
      <category term="hueman" scheme="http://visugar.com/tags/hueman/"/>
    
  </entry>
  
</feed>
